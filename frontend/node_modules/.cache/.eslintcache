[{"/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/index.js":"1","/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/reportWebVitals.js":"2","/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/App.js":"3","/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/routes/Home.js":"4","/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/routes/Posts.js":"5","/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/routes/Dashboard.js":"6","/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/context/CredentialsContext.js":"7","/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/routes/Login.js":"8","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/index.js":"9","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/App.js":"10","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/reportWebVitals.js":"11","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Login.js":"12","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Home.js":"13","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Posts.js":"14","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/context/CredentialsContext.js":"15","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Signup.js":"16","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Profile.js":"17","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/PageNotFound.js":"18","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Settings.js":"19","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/CreateTextPost.js":"20","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/hooks/useInput.js":"21","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/hooks/useComponent.js":"22","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/context/DarkModeContext.js":"23","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/components/TextPost.js":"24","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/CreateImagePost.js":"25","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/components/ImagePost.js":"26","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/constants.js":"27","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Search.js":"28"},{"size":1395,"mtime":1660038539115,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1660020424604,"results":"31","hashOfConfig":"30"},{"size":1106,"mtime":1660038027723,"results":"32","hashOfConfig":"30"},{"size":92,"mtime":1660025306248,"results":"33","hashOfConfig":"30"},{"size":95,"mtime":1660025318519,"results":"34","hashOfConfig":"30"},{"size":450,"mtime":1660038036120,"results":"35","hashOfConfig":"30"},{"size":144,"mtime":1660026108442,"results":"36","hashOfConfig":"30"},{"size":891,"mtime":1660039706364,"results":"37","hashOfConfig":"30"},{"size":4254,"mtime":1660717014134,"results":"38","hashOfConfig":"39"},{"size":2536,"mtime":1660648087653,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":1660020424604,"results":"41","hashOfConfig":"39"},{"size":6125,"mtime":1660651532444,"results":"42","hashOfConfig":"39"},{"size":614,"mtime":1660391321772,"results":"43","hashOfConfig":"39"},{"size":1357,"mtime":1660543591120,"results":"44","hashOfConfig":"39"},{"size":144,"mtime":1660026108442,"results":"45","hashOfConfig":"39"},{"size":6807,"mtime":1660651537374,"results":"46","hashOfConfig":"39"},{"size":13917,"mtime":1660784004747,"results":"47","hashOfConfig":"39"},{"size":406,"mtime":1660296991732,"results":"48","hashOfConfig":"39"},{"size":878,"mtime":1660611127448,"results":"49","hashOfConfig":"39"},{"size":3016,"mtime":1660662568584,"results":"50","hashOfConfig":"39"},{"size":1975,"mtime":1660653075097,"results":"51","hashOfConfig":"39"},{"size":3155,"mtime":1660652157755,"results":"52","hashOfConfig":"39"},{"size":125,"mtime":1660393633645,"results":"53","hashOfConfig":"39"},{"size":2609,"mtime":1660745109052,"results":"54","hashOfConfig":"39"},{"size":4414,"mtime":1660662506090,"results":"55","hashOfConfig":"39"},{"size":2770,"mtime":1660783979006,"results":"56","hashOfConfig":"39"},{"size":14869,"mtime":1660626215937,"results":"57","hashOfConfig":"39"},{"size":141,"mtime":1660630624100,"results":"58","hashOfConfig":"39"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r89gaa",{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b0lwv4",{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"91"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"91"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"91"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"91"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"91"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"91"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"91"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"91"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/index.js",[],[],"/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/reportWebVitals.js",[],[],[],"/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/App.js",["154","155"],[],"/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/routes/Home.js",[],[],"/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/routes/Posts.js",[],[],"/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/routes/Dashboard.js",["156","157"],[],"/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/context/CredentialsContext.js",[],[],"/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/routes/Login.js",["158"],[],"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/index.js",[],[],"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/App.js",["159","160","161"],[],"import React, {useContext, useState} from 'react';\nimport { Outlet, NavLink, Navigate } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHouse, faChartLine, faPlus, faGear, faMoon, faSun, faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons'\nimport './App.css'\nimport { CredentialsContext } from './context/CredentialsContext';\nimport { DarkModeContext } from './context/DarkModeContext';\nimport useComponent from './hooks/useComponent';\n\nfunction App() {\n  const {storedCredentials, setStoredCredentials} = useContext(CredentialsContext);\n  const {darkMode, setDarkMode} = useContext(DarkModeContext);\n  const {Div} = useComponent()\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => {\n    console.log(event.currentTarget)\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const Logout = () => {\n    handleClose()\n    localStorage.removeItem('SebMediaCredentials')\n    setStoredCredentials(null)\n  }\n\n  const navStyle = {\n    marginRight: '5%',\n    fontSize: 35\n  }\n\n  const darkLightModeIconStyle = {\n    fontSize: 35,\n    marginLeft: 10,\n    cursor: 'pointer'\n  }\n  return (\n    <Div>\n      <header style={{borderBottomColor: darkMode ? 'white' : 'black'}}>\n        <div>\n          <h1>SebMedia 2.0</h1>\n          <button style={{background: 'none', margin: 0, padding: 0, border: 'none'}} onClick={() => {setDarkMode(!darkMode)}}>\n            {darkMode ?\n              <FontAwesomeIcon icon={faSun} style={{...darkLightModeIconStyle, color: 'white'}}/>\n            :\n              <FontAwesomeIcon icon={faMoon} style={{...darkLightModeIconStyle, color: 'black'}}/>\n            }\n          </button>\n        </div>\n        <div>\n          <NavLink to=\"home\" style={navStyle}>\n            <FontAwesomeIcon icon={faHouse}/>\n          </NavLink>\n          <NavLink to=\"search\" style={navStyle}>\n            <FontAwesomeIcon icon={faMagnifyingGlass}/>\n          </NavLink>\n          <NavLink to=\"profile\" style={navStyle}>\n            <FontAwesomeIcon icon={faChartLine}/>\n          </NavLink>\n          <NavLink to=\"posts\" style={navStyle}>\n            <FontAwesomeIcon icon={faPlus}/>\n          </NavLink>\n          <NavLink to=\"settings\" style={navStyle}>\n            <FontAwesomeIcon icon={faGear}/>\n          </NavLink>\n        </div>\n      </header>\n      {storedCredentials ? <Outlet/> : <Navigate to=\"login\"/>}\n    </Div>\n  );\n}\n\nexport default App;\n",[],"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/reportWebVitals.js",[],[],"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Login.js",["162","163"],[],"import React, {useContext, useState} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { CredentialsContext } from '../context/CredentialsContext';\nimport axios from 'axios';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport Link from '@mui/material/Link'\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { DarkModeContext } from '../context/DarkModeContext';\nimport useComponent from '../hooks/useComponent';\n\nconst Login = () => {\n    const [error, setError] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const {storedCredentials, setStoredCredentials} = useContext(CredentialsContext);\n    const [rememberMe, setRememberMe] = useState(true);\n    const navigate = useNavigate();\n    const theme = createTheme();\n    const {darkMode, setDarkMode} = useContext(DarkModeContext);\n    const { StyledTextField } = useComponent();\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n        setLoading(true)\n        setError(null)\n\n        const url = 'http://localhost:8080/user/login'\n        const data = new FormData(e.currentTarget)\n        const toSend = {\n            email: data.get('email'),\n            password: data.get('password')\n        }\n\n        axios.post(url, toSend).then(result => {\n            setLoading(false)\n            setStoredCredentials(result.data.data)\n            if (rememberMe) localStorage.setItem('SebMediaCredentials', JSON.stringify(result.data.data))\n            navigate('/home')\n        }).catch(error => {\n            setLoading(false)\n            setError(error?.response?.data?.error || 'Unknown error occured')\n            console.error(error)\n        })\n    }\n\n    return (\n        <div style={{height: '100vh', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\n            <h1 style={{marginBottom: 0}}>Welcome to SebMedia!</h1>\n            {loading ?\n                <Box sx={{display: 'flex', justifyContent: 'center', mt: 3}}>\n                    <CircularProgress/>\n                </Box>\n            :\n                <>\n                    <ThemeProvider theme={theme}>\n                        <Container component=\"main\" maxWidth=\"xs\">\n                            <CssBaseline />\n                            <Box\n                                sx={{\n                                    marginTop: 8,\n                                    display: 'flex',\n                                    flexDirection: 'column',\n                                    alignItems: 'center',\n                                }}\n                            >\n                                <Typography component=\"h1\" variant=\"h5\">\n                                    Sign in\n                                </Typography>\n                                <Box component=\"form\" onSubmit={handleLogin} noValidate sx={{ mt: 1 }}>\n                                    <StyledTextField\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    autoFocus\n                                    InputLabelProps={{\n                                        style: {\n                                            color: darkMode ? 'white' : 'black'\n                                        }\n                                    }}\n                                    />\n                                    <StyledTextField\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    InputLabelProps={{\n                                        style: {\n                                            color: darkMode ? 'white' : 'black'\n                                        }\n                                    }}\n                                    />\n                                    <FormControlLabel\n                                    control={<Checkbox value=\"remember\" color=\"primary\" defaultChecked onChange={(e) => setRememberMe(e.target.checked)}/>}\n                                    label=\"Remember me\"\n                                    />\n                                    {error && <Typography component=\"h1\" variant=\"h6\" sx={{color: 'red', textAlign: 'center'}}>{error}</Typography>}\n                                    <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    sx={{ mt: 3, mb: 2 }}\n                                    >\n                                    Sign In\n                                    </Button>\n                                    <Box sx={{display: 'flex', justifyContent: 'center'}}>\n                                        <Link variant='h5' onClick={() => navigate('/signup')} sx={{cursor: 'pointer'}}>Don't have an account? Signup</Link>\n                                    </Box>\n                                </Box>\n                            </Box>\n                        </Container>\n                    </ThemeProvider>\n                </>\n            }\n        </div>\n    )\n}\n\nexport default Login;","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Home.js",["164"],[],"import React, {useContext} from 'react';\nimport { CredentialsContext } from '../context/CredentialsContext';\n\nconst Home = () => {\n    const {storedCredentials, setStoredCredentials} = useContext(CredentialsContext);\n    const {following} = storedCredentials;\n    return (\n        <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\n            {following.length > 1 ?\n                <h1>Home feed coming soon</h1>\n            :\n                <h1>Start following some people to see a home feed!</h1>\n            }\n        </div>\n    )\n}\n\nexport default Home;","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Posts.js",[],[],"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/context/CredentialsContext.js",[],[],"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Signup.js",["165","166"],[],"import React, {useContext, useState} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { CredentialsContext } from '../context/CredentialsContext';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport Link from '@mui/material/Link'\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { DarkModeContext } from '../context/DarkModeContext';\nimport useComponent from '../hooks/useComponent';\n\nconst Signup = () => {\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(null)\n    const [rememberMe, setRememberMe] = useState(true)\n    const {storedCredentials, setStoredCredentials} = useContext(CredentialsContext)\n    const {darkMode, setDarkMode} = useContext(DarkModeContext)\n    const navigate = useNavigate()\n    const theme = createTheme();\n    const { StyledTextField } = useComponent();\n\n    const handleSignup = (e) => {\n        e.preventDefault();\n\n        setLoading(true)\n        setError(null)\n\n        const url = 'http://localhost:8080/user/signup';\n        const data = new FormData(e.currentTarget)\n        const toSend = {\n            email: data.get('email'),\n            password: data.get('password'),\n            name: data.get('name')\n        }\n\n        axios.post(url, toSend).then(result => {\n            setLoading(false)\n            setStoredCredentials(result.data.data)\n            if (rememberMe) localStorage.setItem('SebMediaCredentials', JSON.stringify(result.data.data))\n            navigate('/home')\n        }).catch(error => {\n            setLoading(false)\n            setError(error?.response?.data?.error || 'Unknown error occured')\n            console.error(error)\n        })\n    }\n\n    return (\n        <div style={{height: '100vh', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\n            <h1 style={{marginBottom: 0}}>Welcome to SebMedia!</h1>\n            {loading ?\n                <Box sx={{display: 'flex', justifyContent: 'center', mt: 3}}>\n                    <CircularProgress/>\n                </Box>\n            :\n                <>\n                    <ThemeProvider theme={theme}>\n                        <Container component=\"main\" maxWidth=\"xs\">\n                            <CssBaseline />\n                            <Box\n                                sx={{\n                                    marginTop: 8,\n                                    display: 'flex',\n                                    flexDirection: 'column',\n                                    alignItems: 'center',\n                                }}\n                            >\n                                <Typography component=\"h1\" variant=\"h5\">\n                                    Signup\n                                </Typography>\n                                <Box component=\"form\" onSubmit={handleSignup} noValidate sx={{ mt: 1 }}>\n                                    <StyledTextField\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    id=\"name\"\n                                    label=\"Username\"\n                                    name=\"name\"\n                                    autoFocus\n                                    InputLabelProps={{\n                                        style: {\n                                            color: darkMode ? 'white' : 'dark'\n                                        }\n                                    }}\n                                    />\n                                    <StyledTextField\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    InputLabelProps={{\n                                        style: {\n                                            color: darkMode ? 'white' : 'dark'\n                                        }\n                                    }}\n                                    />\n                                    <StyledTextField\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    InputLabelProps={{\n                                        style: {\n                                            color: darkMode ? 'white' : 'dark'\n                                        }\n                                    }}\n                                    />\n                                    <FormControlLabel\n                                    control={<Checkbox value=\"remember\" color=\"primary\" defaultChecked onChange={(e) => setRememberMe(e.target.checked)}/>}\n                                    label=\"Remember me\"\n                                    />\n                                    {error && <Typography component=\"h1\" variant=\"h6\" sx={{color: 'red', textAlign: 'center'}}>{error}</Typography>}\n                                    <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    sx={{ mt: 3, mb: 2 }}\n                                    >\n                                    Signup\n                                    </Button>\n                                    <Box sx={{display: 'flex', justifyContent: 'center'}}>\n                                        <Link variant='h5' onClick={() => navigate('/login')} sx={{cursor: 'pointer'}}>Already have an account? Login</Link>\n                                    </Box>\n                                </Box>\n                            </Box>\n                        </Container>\n                    </ThemeProvider>\n                </>\n            }\n        </div>\n    )\n}\n\nexport default Signup;","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Profile.js",["167","168","169","170","171","172"],[],"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/PageNotFound.js",[],[],"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Settings.js",["173","174"],[],"import React, {useContext} from \"react\";\nimport { CredentialsContext } from \"../context/CredentialsContext\";\nimport { Button } from '@mui/material';\n\nconst SettingsButton = ({text, onClick}) => (\n    <button onClick={onClick} style={{width: '50vw', height: '10vh', marginTop: '2vh', border: '1px solid black', borderRadius: 10, fontSize: '5vh', cursor: 'pointer'}}>{text}</button>\n)\n\nconst Settings = () => {\n    const {storedCredentials, setStoredCredentials} = useContext(CredentialsContext)\n\n    const Logout = () => {\n        localStorage.removeItem('SebMediaCredentials')\n        setStoredCredentials(null)\n    }\n\n    return (\n        <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\n            <Button variant=\"outlined\" onClick={Logout} size=\"large\">Logout</Button>\n        </div>\n    )\n}\n\nexport default Settings;","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/CreateTextPost.js",["175","176","177"],[],"import React, {useContext, useState} from 'react';\nimport { CredentialsContext } from '../context/CredentialsContext';\nimport useInput from '../hooks/useInput';\nimport { Box, CircularProgress, TextField, Grid } from '@mui/material';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'\nimport { DarkModeContext } from \"../context/DarkModeContext\";\nimport TextPost from '../components/TextPost';\nimport AddIcon from '@mui/icons-material/Add';\nimport Fab from '@mui/material/Fab';\n\nconst CreateTextPost = () => {\n    const {storedCredentials, setStoredCredentials} = useContext(CredentialsContext);\n    const {darkMode, setDarkMode} = useContext(DarkModeContext);\n    const {_id} = storedCredentials;\n    const [title, bindTitle] = useInput('', 'title')\n    const [body, bindBody] = useInput('', 'body')\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(null)\n    const navigate = useNavigate();\n\n    const uploadTextPost = (e) => {\n        e.preventDefault();\n        setLoading(true)\n        setError(null)\n\n        const toSend = {\n            title,\n            body,\n            userId: _id\n        }\n\n        axios.post('http://localhost:8080/user/textPost', toSend).then(response => response.data)\n        .then(result => {\n            setLoading(false)\n            setError(null)\n            navigate('/home')\n        }).catch(error => {\n            setLoading(false)\n            setError(error?.response?.data?.error)\n        })\n    }\n\n    return (\n        <>\n            <h1>Create Text Post</h1>\n            {loading ?\n                <Box sx={{display: 'flex', justifyContent: 'center', mt: 3}}>\n                    <CircularProgress/>\n                </Box>\n            :\n                <>\n                    <form onSubmit={uploadTextPost} style={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\n                        <TextField {...bindTitle}/>\n                        <TextField {...bindBody} multiline/>\n                        {title && body &&\n                            <Fab color=\"primary\" aria-label=\"submit\" type=\"submit\" variant=\"extended\" sx={{mt: 2}}>\n                                <AddIcon />\n                                Submit\n                            </Fab>\n                        }\n                        {error && <p style={{color: 'red'}}>{error}</p>}\n                    </form>\n                    <h2>Preview:</h2>\n                    {!title || !body ?\n                        <>\n                            <h3>Preview is waiting for a title AND body to be entered...</h3>\n                            <CircularProgress/>\n                        </>\n                    :\n                        <Grid container spacing={2} sx={{justifyContent: 'center'}}>\n                            <TextPost title={title} body={body}/>\n                        </Grid>\n                    }\n                </>\n            }\n        </>\n    )\n}\n\nexport default CreateTextPost;","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/hooks/useInput.js",["178"],[],"import {useState, useContext} from 'react';\nimport { DarkModeContext } from '../context/DarkModeContext';\n\nconst capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1)\n}\n\nconst useInput = (initialText = '', inputName) => {\n    const [text, setText] = useState(initialText);\n    const {darkMode, setDarkMode} = useContext(DarkModeContext);\n\n    const bind = {\n        value: text,\n        onChange: (e) => {\n            setText(e.target.value)\n        },\n        name: inputName,\n        type: 'text',\n        sx: {\n            mt: 2\n        },\n        variant: 'outlined',\n        label: capitalizeFirstLetter(inputName),\n        InputLabelProps: {\n            style: {\n                color: darkMode ? 'white' : 'black'\n            }\n        },\n        InputProps: {\n            style: {\n                color: darkMode ? 'white' : 'black',\n                borderColor: darkMode ? 'white' : 'black'\n            },\n            notchedOutline: {\n                color: darkMode ? 'white' : 'black'\n            }\n        },\n        OutlinedInputProps: {\n            style: {\n                borderColor: darkMode ? 'white' : 'black'\n            },\n            color: darkMode ? '#ffffff' : '#000000',\n            inputProps: {\n                style: {\n                    color: darkMode ? 'white' : 'black',\n                    borderColor: darkMode ? 'white' : 'black'\n                }\n            }\n        },\n        FilledInputProps: {\n            style: {\n                color: darkMode ? 'white' : 'black',\n                borderColor: darkMode ? 'white' : 'black'\n            }\n        },\n        inputProps: {\n            style: {\n                color: darkMode ? 'white' : 'black',\n                borderColor: darkMode ? 'white' : 'black'\n            },\n            notchedOutline: {\n                color: darkMode ? 'white' : 'black'\n            }\n        }\n    }\n\n    return [text, bind];\n}\n\nexport default useInput;","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/hooks/useComponent.js",["179"],[],"import { useContext } from \"react\";\nimport { DarkModeContext } from \"../context/DarkModeContext\";\nimport { styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\n\nconst useComponent = () => {\n    const {darkMode, setDarkMode} = useContext(DarkModeContext);\n\n    const FlexRowCentreDiv = (props) => {\n        return <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'row', backgroundColor: darkMode ? 'black' : 'white', color: darkMode ? 'white' : 'black', ...props.style}}>{props.children}</div>\n    }\n\n    const FlexColumnCentreDiv = (props) => {\n        return <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', backgroundColor: darkMode ? 'black' : 'white', color: darkMode ? 'white' : 'black', ...props.style}}>{props.children}</div>\n    }\n\n    const FlexRowSpaceAroundDiv = (props) => {\n        return <div style={{display: 'flex', justifyContent: 'space-around', alignItems: 'center', flexDirection: 'row', backgroundColor: darkMode ? 'black' : 'white', color: darkMode ? 'white' : 'black', ...props.style}}>{props.children}</div>\n    }\n\n    const H3NoMargin = (props) => <h3 style={{margin: 0, color: darkMode ? 'white' : 'black', ...props.style}}>{props.children}</h3>\n\n    const Div = (props) => <div style={{backgroundColor: darkMode ? 'black' : 'white', color: darkMode ? 'white' : 'black', ...props.style}}>{props.children}</div>\n\n    const StyledTextField = styled(TextField)({\n        '& label.Mui-focused': {\n            color: darkMode ? 'white' : 'black'\n        },\n        '& .MuiInput-underline:after': {\n            borderBottomColor: darkMode ? 'white' : 'black'\n        },\n        '& .MuiOutlinedInput-root' : {\n            color: darkMode ? 'white' : 'black',\n            '& fieldset': {\n                color: darkMode ? 'white' : 'black',\n                borderColor: darkMode ? 'white' : 'black'\n            },\n            '&:hover fieldset': {\n                borderColor: darkMode ? 'white' : 'black'\n            },\n            '&.Mui-focused fieldset': {\n                borderColor: darkMode ? 'white' : 'black'\n            }\n        }\n    })\n\n    const StyledTextFieldStylesObject = {\n        '& label.Mui-focused': {\n            color: darkMode ? 'white' : 'black'\n        },\n        '& .MuiInput-underline:after': {\n            borderBottomColor: darkMode ? 'white' : 'black'\n        },\n        '& .MuiOutlinedInput-root' : {\n            color: darkMode ? 'white' : 'black',\n            '& fieldset': {\n                color: darkMode ? 'white' : 'black',\n                borderColor: darkMode ? 'white' : 'black'\n            },\n            '&:hover fieldset': {\n                borderColor: darkMode ? 'white' : 'black'\n            },\n            '&.Mui-focused fieldset': {\n                borderColor: darkMode ? 'white' : 'black'\n            }\n        }\n    }\n\n    return {\n        FlexRowCentreDiv,\n        FlexColumnCentreDiv,\n        FlexRowSpaceAroundDiv,\n        H3NoMargin,\n        Div,\n        StyledTextField,\n        StyledTextFieldStylesObject\n    }\n}\n\nexport default useComponent;","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/context/DarkModeContext.js",[],[],"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/components/TextPost.js",["180","181"],[],"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/CreateImagePost.js",["182"],[],"import React, {useState, useContext, useEffect} from 'react';\nimport { CredentialsContext } from '../context/CredentialsContext';\nimport useInput from '../hooks/useInput';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, CircularProgress, TextField, Grid } from '@mui/material';\nimport { useFilePicker } from 'use-file-picker';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Fab from '@mui/material/Fab';\nimport ImagePost from '../components/ImagePost';\n\nconst CreateImagePost = () => {\n    const {storedCredentials, setStoredCredentials} = useContext(CredentialsContext);\n    const {_id} = storedCredentials;\n    const [imagePreview, setImagePreview] = useState(null)\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null)\n    const [title, bindTitle] = useInput('', 'title')\n    const [body, bindBody] = useInput('', 'body')\n    const navigate = useNavigate();\n    const [openFilePicker, { plainFiles: imageToUpload }] = useFilePicker({accept: 'image/jpeg', multiple: false})\n\n    const uploadImagePost = (e) => {\n        e.preventDefault()\n\n        setLoading(true)\n\n        const toSend = new FormData();\n\n        toSend.append('image', imageToUpload[0])\n        toSend.append('title', title)\n        toSend.append('body', body)\n        toSend.append('userId', _id)\n\n        axios.post('http://localhost:8080/user/imagePost', toSend, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'multipart/form-data'\n            }\n        }).then(result => {\n            navigate('/home')\n        }).catch(error => {\n            console.error(error)\n            setError(error?.response?.data?.error || String(error))\n            setLoading(false)\n        })\n    }\n\n    useEffect(() => {\n        if (imageToUpload[0]) {\n            var file = imageToUpload[0]\n            var reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onloadend = (e) => {\n                setImagePreview(reader.result)\n            }\n        }\n    }, [imageToUpload])\n\n    return (\n        <>\n            <h1>Create Image Post</h1>\n            {loading ? \n                <Box sx={{display: 'flex', justifyContent: 'center'}}>\n                    <CircularProgress/>\n                </Box>\n            :\n                <>\n                    <form onSubmit={uploadImagePost} style={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\n                        <TextField {...bindTitle}/>\n                        <TextField {...bindBody} multiline style={{marginBottom: 10}}/>\n                        <Fab color=\"secondary\" aria-label=\"add\" variant=\"extended\" onClick={openFilePicker}>\n                            {imagePreview ?\n                                <>\n                                    <EditIcon />\n                                    Change Image\n                                </>\n                            :\n                                <>\n                                    <AddIcon />\n                                    Image\n                                </>\n                            }\n                        </Fab>\n                        {title && body && imagePreview &&\n                            <Fab color=\"primary\" aria-label=\"submit\" type=\"submit\" variant=\"extended\" sx={{mt: 2}}>\n                                <AddIcon />\n                                Submit\n                            </Fab>\n                        }\n                        {error && <p style={{color: 'red'}}>{error}</p>}\n                    </form>\n                    <h2>Preview:</h2>\n                    {title && body && imagePreview ?\n                        <Grid container sx={{justifyContent: 'center'}}>\n                            <ImagePost title={title} body={body} previewImage={imagePreview}/>\n                        </Grid>\n                    :\n                        <>\n                            <h2>Preview is waiting for a title, body, AND image</h2>\n                            <Box sx={{justifyContent: 'center'}}>\n                                <CircularProgress/>\n                            </Box>\n                        </>\n                    }\n                </>\n            }\n        </>\n    )\n}\n\nexport default CreateImagePost;","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/components/ImagePost.js",["183","184","185"],[],"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/constants.js",[],[],"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Search.js",[],[],{"ruleId":"186","severity":1,"message":"187","line":4,"column":40,"nodeType":"188","messageId":"189","endLine":4,"endColumn":52},{"ruleId":"186","severity":1,"message":"190","line":9,"column":29,"nodeType":"188","messageId":"189","endLine":9,"endColumn":49},{"ruleId":"186","severity":1,"message":"191","line":5,"column":12,"nodeType":"188","messageId":"189","endLine":5,"endColumn":29},{"ruleId":"186","severity":1,"message":"190","line":5,"column":31,"nodeType":"188","messageId":"189","endLine":5,"endColumn":51},{"ruleId":"186","severity":1,"message":"192","line":1,"column":16,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"186","severity":1,"message":"193","line":15,"column":9,"nodeType":"188","messageId":"189","endLine":15,"endColumn":13},{"ruleId":"186","severity":1,"message":"194","line":16,"column":9,"nodeType":"188","messageId":"189","endLine":16,"endColumn":20},{"ruleId":"186","severity":1,"message":"195","line":24,"column":9,"nodeType":"188","messageId":"189","endLine":24,"endColumn":15},{"ruleId":"186","severity":1,"message":"191","line":21,"column":12,"nodeType":"188","messageId":"189","endLine":21,"endColumn":29},{"ruleId":"186","severity":1,"message":"196","line":25,"column":22,"nodeType":"188","messageId":"189","endLine":25,"endColumn":33},{"ruleId":"186","severity":1,"message":"190","line":5,"column":31,"nodeType":"188","messageId":"189","endLine":5,"endColumn":51},{"ruleId":"186","severity":1,"message":"191","line":22,"column":12,"nodeType":"188","messageId":"189","endLine":22,"endColumn":29},{"ruleId":"186","severity":1,"message":"196","line":23,"column":22,"nodeType":"188","messageId":"189","endLine":23,"endColumn":33},{"ruleId":"186","severity":1,"message":"196","line":25,"column":22,"nodeType":"188","messageId":"189","endLine":25,"endColumn":33},{"ruleId":"197","severity":1,"message":"198","line":170,"column":8,"nodeType":"199","endLine":170,"endColumn":10,"suggestions":"200"},{"ruleId":"197","severity":1,"message":"201","line":189,"column":8,"nodeType":"199","endLine":189,"endColumn":58,"suggestions":"202"},{"ruleId":"197","severity":1,"message":"201","line":197,"column":8,"nodeType":"199","endLine":197,"endColumn":60,"suggestions":"203"},{"ruleId":"197","severity":1,"message":"204","line":229,"column":8,"nodeType":"199","endLine":229,"endColumn":30,"suggestions":"205"},{"ruleId":"206","severity":1,"message":"207","line":241,"column":25,"nodeType":"208","endLine":241,"endColumn":253},{"ruleId":"186","severity":1,"message":"209","line":5,"column":7,"nodeType":"188","messageId":"189","endLine":5,"endColumn":21},{"ruleId":"186","severity":1,"message":"191","line":10,"column":12,"nodeType":"188","messageId":"189","endLine":10,"endColumn":29},{"ruleId":"186","severity":1,"message":"190","line":13,"column":31,"nodeType":"188","messageId":"189","endLine":13,"endColumn":51},{"ruleId":"186","severity":1,"message":"210","line":14,"column":12,"nodeType":"188","messageId":"189","endLine":14,"endColumn":20},{"ruleId":"186","severity":1,"message":"196","line":14,"column":22,"nodeType":"188","messageId":"189","endLine":14,"endColumn":33},{"ruleId":"186","severity":1,"message":"196","line":10,"column":22,"nodeType":"188","messageId":"189","endLine":10,"endColumn":33},{"ruleId":"186","severity":1,"message":"196","line":7,"column":22,"nodeType":"188","messageId":"189","endLine":7,"endColumn":33},{"ruleId":"186","severity":1,"message":"196","line":10,"column":22,"nodeType":"188","messageId":"189","endLine":10,"endColumn":33},{"ruleId":"197","severity":1,"message":"211","line":43,"column":8,"nodeType":"199","endLine":43,"endColumn":10,"suggestions":"212"},{"ruleId":"186","severity":1,"message":"190","line":14,"column":31,"nodeType":"188","messageId":"189","endLine":14,"endColumn":51},{"ruleId":"186","severity":1,"message":"196","line":10,"column":22,"nodeType":"188","messageId":"189","endLine":10,"endColumn":33},{"ruleId":"197","severity":1,"message":"211","line":43,"column":8,"nodeType":"199","endLine":43,"endColumn":10,"suggestions":"213"},{"ruleId":"206","severity":1,"message":"207","line":50,"column":17,"nodeType":"208","endLine":50,"endColumn":147},"no-unused-vars","'faCirclePlus' is defined but never used.","Identifier","unusedVar","'setStoredCredentials' is assigned a value but never used.","'storedCredentials' is assigned a value but never used.","'useContext' is defined but never used.","'open' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'Logout' is assigned a value but never used.","'setDarkMode' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadPosts'. Either include it or remove the dependency array.","ArrayExpression",["214"],"React Hook useMemo has a missing dependency: 'publicId'. Either include it or remove the dependency array.",["215"],["216"],"React Hook useEffect has missing dependencies: '_id', 'setStoredCredentials', and 'storedCredentials'. Either include them or remove the dependency array.",["217"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SettingsButton' is assigned a value but never used.","'darkMode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'NetworkRequestController'. Either include it or remove the dependency array.",["218"],["219"],{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"228","fix":"230"},"Update the dependencies array to be: [loadPosts]",{"range":"231","text":"232"},"Update the dependencies array to be: [publicId, textPostState.posts]",{"range":"233","text":"234"},"Update the dependencies array to be: [imagePostState.posts, publicId]",{"range":"235","text":"236"},"Update the dependencies array to be: [_id, profileImageToUpload, setStoredCredentials, storedCredentials]",{"range":"237","text":"238"},"Update the dependencies array to be: [NetworkRequestController]",{"range":"239","text":"240"},{"range":"241","text":"240"},[7826,7828],"[loadPosts]",[8580,8630],"[publicId, textPostState.posts]",[8965,9017],"[imagePostState.posts, publicId]",[10328,10350],"[_id, profileImageToUpload, setStoredCredentials, storedCredentials]",[1949,1951],"[NetworkRequestController]",[1975,1977]]