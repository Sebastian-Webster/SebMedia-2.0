[{"/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/index.js":"1","/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/reportWebVitals.js":"2","/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/App.js":"3","/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/routes/Home.js":"4","/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/routes/Posts.js":"5","/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/routes/Dashboard.js":"6","/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/context/CredentialsContext.js":"7","/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/routes/Login.js":"8","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/index.js":"9","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/App.js":"10","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/reportWebVitals.js":"11","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Login.js":"12","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Home.js":"13","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Posts.js":"14","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/context/CredentialsContext.js":"15","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Signup.js":"16","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Profile.js":"17","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/PageNotFound.js":"18","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Settings.js":"19","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/CreateTextPost.js":"20","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/hooks/useInput.js":"21","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/hooks/useComponent.js":"22","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/context/DarkModeContext.js":"23","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/components/TextPost.js":"24","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/CreateImagePost.js":"25"},{"size":1395,"mtime":1660038539115,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1660020424604,"results":"28","hashOfConfig":"27"},{"size":1106,"mtime":1660038027723,"results":"29","hashOfConfig":"27"},{"size":92,"mtime":1660025306248,"results":"30","hashOfConfig":"27"},{"size":95,"mtime":1660025318519,"results":"31","hashOfConfig":"27"},{"size":450,"mtime":1660038036120,"results":"32","hashOfConfig":"27"},{"size":144,"mtime":1660026108442,"results":"33","hashOfConfig":"27"},{"size":891,"mtime":1660039706364,"results":"34","hashOfConfig":"27"},{"size":2655,"mtime":1660543576072,"results":"35","hashOfConfig":"36"},{"size":2034,"mtime":1660528832666,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1660020424604,"results":"38","hashOfConfig":"36"},{"size":3029,"mtime":1660526681586,"results":"39","hashOfConfig":"36"},{"size":614,"mtime":1660391321772,"results":"40","hashOfConfig":"36"},{"size":1357,"mtime":1660543591120,"results":"41","hashOfConfig":"36"},{"size":144,"mtime":1660026108442,"results":"42","hashOfConfig":"36"},{"size":3066,"mtime":1660526802118,"results":"43","hashOfConfig":"36"},{"size":5297,"mtime":1660543028246,"results":"44","hashOfConfig":"36"},{"size":406,"mtime":1660296991732,"results":"45","hashOfConfig":"36"},{"size":814,"mtime":1660298814739,"results":"46","hashOfConfig":"36"},{"size":1919,"mtime":1660541078567,"results":"47","hashOfConfig":"36"},{"size":518,"mtime":1660386594127,"results":"48","hashOfConfig":"36"},{"size":1542,"mtime":1660541431837,"results":"49","hashOfConfig":"36"},{"size":125,"mtime":1660393633645,"results":"50","hashOfConfig":"36"},{"size":371,"mtime":1660541847443,"results":"51","hashOfConfig":"36"},{"size":2779,"mtime":1660546536151,"results":"52","hashOfConfig":"36"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r89gaa",{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"b0lwv4",{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"81"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"81"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"81"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"81"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"81"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"81"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"81"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"81"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/index.js",[],[],"/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/reportWebVitals.js",[],[],[],"/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/App.js",["138","139"],[],"/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/routes/Home.js",[],[],"/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/routes/Posts.js",[],[],"/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/routes/Dashboard.js",["140","141"],[],"/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/context/CredentialsContext.js",[],[],"/Users/sebastianwebster/IOD_FOLDER/9thAugust/react-router-app/src/routes/Login.js",["142"],[],"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/index.js",[],[],[],"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/App.js",["143","144","145","146","147"],[],"import React, {useContext} from 'react';\nimport { Outlet, NavLink, Navigate } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHouse, faChartLine, faPlus, faGear, faMoon, faSun } from '@fortawesome/free-solid-svg-icons'\nimport './App.css'\nimport { CredentialsContext } from './context/CredentialsContext';\nimport { DarkModeContext } from './context/DarkModeContext';\nimport useComponent from './hooks/useComponent';\n\nfunction App() {\n  const {storedCredentials, setStoredCredentials} = useContext(CredentialsContext);\n  const {darkMode, setDarkMode} = useContext(DarkModeContext);\n  const {Div} = useComponent()\n\n  const navStyle = {\n    marginRight: '5%'\n  }\n\n  const darkLightModeIconStyle = {\n    fontSize: 35,\n    marginLeft: 10,\n    cursor: 'pointer'\n  }\n  return (\n    <Div>\n      <header style={{borderBottomColor: darkMode ? 'white' : 'black'}}>\n        <div>\n          <h1>SebMedia</h1>\n          {/*\n          <button style={{background: 'none', margin: 0, padding: 0, border: 'none'}} onClick={() => {setDarkMode(!darkMode)}}>\n            {darkMode ?\n              <FontAwesomeIcon icon={faSun} style={{...darkLightModeIconStyle, color: 'white'}}/>\n            :\n              <FontAwesomeIcon icon={faMoon} style={{...darkLightModeIconStyle, color: 'black'}}/>\n            }\n          </button>\n          */}\n        </div>\n        <div>\n          <NavLink to=\"home\" style={navStyle}>\n            <FontAwesomeIcon icon={faHouse}/>\n          </NavLink>\n          <NavLink to=\"profile\" style={navStyle}>\n            <FontAwesomeIcon icon={faChartLine}/>\n          </NavLink>\n          <NavLink to=\"posts\" style={navStyle}>\n            <FontAwesomeIcon icon={faPlus} style={navStyle}/>\n          </NavLink>\n          <NavLink to=\"settings\" style={navStyle}>\n            <FontAwesomeIcon icon={faGear} style={navStyle}/>\n          </NavLink>\n        </div>\n      </header>\n      {storedCredentials ? <Outlet/> : <Navigate to=\"login\"/>}\n    </Div>\n  );\n}\n\nexport default App;\n","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/reportWebVitals.js",[],[],"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Login.js",["148"],[],"import React, {useContext, useState} from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { CredentialsContext } from '../context/CredentialsContext';\nimport axios from 'axios';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\n\nconst Login = () => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [error, setError] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const {storedCredentials, setStoredCredentials} = useContext(CredentialsContext);\n    const [rememberMe, setRememberMe] = useState(true);\n    const navigate = useNavigate();\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n        setLoading(true)\n        setError(null)\n\n        const url = 'http://localhost:8080/user/login'\n        const toSend = {email, password}\n\n        axios.post(url, toSend).then(result => {\n            setLoading(false)\n            setStoredCredentials(result.data.data)\n            if (rememberMe) localStorage.setItem('SebMediaCredentials', JSON.stringify(result.data.data))\n            navigate('/home')\n        }).catch(error => {\n            setLoading(false)\n            setError(error?.response?.data?.error || 'Unknown error occured')\n            console.error(error)\n        })\n    }\n\n    return (\n        <div style={{height: '100vh', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\n            <h1 style={{marginBottom: 0}}>Welcome to SebMedia!</h1>\n            {loading ?\n                <Box sx={{display: 'flex', justifyContent: 'center', mt: 3}}>\n                    <CircularProgress/>\n                </Box>\n            :\n                <>\n                    <form onSubmit={handleLogin} style={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\n                        <h3>Login here...</h3>\n                        <label htmlFor=\"email\">Email:</label>\n                        <br/>\n                        <input type=\"email\" value={email} onChange={e => setEmail(e.target.value)} name=\"email\"/>\n                        <br/>\n                        <label htmlFor=\"password\">Password: </label>\n                        <br/>\n                        <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} name=\"password\"/>\n                        <br/>\n                        <label htmlFor='rememberMe'>Remember Me</label>\n                        <input type=\"checkbox\" checked={rememberMe} onChange={e => setRememberMe(e.target.checked)} name=\"rememberMe\"/>\n                        <br/>\n                        <input type=\"submit\" value='Login'/>\n                        {error && <p style={{color: 'red', textAlign: 'center'}}>{error}</p>}\n                    </form>\n                    <h1>You may want to <Link to='/signup'>signup instead</Link></h1>\n                </>\n            }\n        </div>\n    )\n}\n\nexport default Login;","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Home.js",["149"],[],"import React, {useContext} from 'react';\nimport { CredentialsContext } from '../context/CredentialsContext';\n\nconst Home = () => {\n    const {storedCredentials, setStoredCredentials} = useContext(CredentialsContext);\n    const {following} = storedCredentials;\n    return (\n        <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\n            {following.length > 1 ?\n                <h1>Home feed coming soon</h1>\n            :\n                <h1>Start following some people to see a home feed!</h1>\n            }\n        </div>\n    )\n}\n\nexport default Home;","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Posts.js",[],[],"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/context/CredentialsContext.js",[],[],"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Signup.js",["150"],[],"import React, {useContext, useState} from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { CredentialsContext } from '../context/CredentialsContext';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\n\nconst Signup = () => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [name, setName] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(null)\n    const [rememberMe, setRememberMe] = useState(true)\n    const {storedCredentials, setStoredCredentials} = useContext(CredentialsContext)\n    const navigate = useNavigate()\n\n    const handleSignup = (e) => {\n        e.preventDefault();\n\n        setLoading(true)\n        setError(null)\n\n        const url = 'http://localhost:8080/user/signup';\n        const toSend = {\n            email: email,\n            password: password,\n            name: name\n        }\n        axios.post(url, toSend).then(result => {\n            setLoading(false)\n            setStoredCredentials(result.data.data)\n            if (rememberMe) localStorage.setItem('SebMediaCredentials', JSON.stringify(result.data.data))\n            navigate('/home')\n        }).catch(error => {\n            setLoading(false)\n            setError(error?.response?.data?.error || 'Unknown error occured')\n            console.error(error)\n        })\n    }\n\n    return (\n        <div style={{height: '100vh', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\n            <h1 style={{marginBottom: 0}}>Welcome to SebMedia!</h1>\n            {loading ?\n                <Box sx={{display: 'flex', justifyContent: 'center', mt: 3}}>\n                    <CircularProgress/>\n                </Box>\n            :\n                <>\n                    <h3>Signup here...</h3>\n                    <form onSubmit={handleSignup}>\n                        <label htmlFor=\"name\">Name:</label>\n                        <input type=\"text\" value={name} onChange={e => setName(e.target.value)} name=\"name\"/>\n                        <label htmlFor=\"email\">Email:</label>\n                        <input type=\"email\" value={email} onChange={e => setEmail(e.target.value)} name=\"email\"/>\n                        <label htmlFor=\"password\">Password: </label>\n                        <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} name=\"password\"/>\n                        <label htmlFor='rememberMe'>Remember Me</label>\n                        <input type=\"checkbox\" checked={rememberMe} onChange={e => setRememberMe(e.target.checked)} name=\"rememberMe\"/>\n                        <input type=\"submit\" value='Signup'/>\n                        {error && <p style={{color: 'red', textAlign: 'center'}}>{error}</p>}\n                    </form>\n                    <h1>You may want to <Link to='/login'>login instead</Link></h1>\n                </>\n            }\n        </div>\n    )\n}\n\nexport default Signup;","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Profile.js",["151","152","153","154","155","156","157","158"],[],"import React, {useContext, useState, useEffect, useMemo, Fragment} from 'react';\nimport { CredentialsContext } from '../context/CredentialsContext';\nimport useComponent from '../hooks/useComponent';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport axios from 'axios';\nimport TextPost from '../components/TextPost';\nimport Grid from '@mui/material/Grid'\n\nvar _ = require('lodash')\n\nconst Profile = () => {\n    const {storedCredentials, setStoredCredentials} = useContext(CredentialsContext)\n    const { FlexRowCentreDiv, FlexColumnCentreDiv, FlexRowSpaceAroundDiv, H3NoMargin } = useComponent()\n    const {name, followers, following} = storedCredentials;\n    const [view, setView] = useState('textPosts')\n    const [textPosts, setTextPosts] = useState(null)\n    const [loadingTextPosts, setLoadingTextPosts] = useState(false)\n    const [loadingTextPostsError, setLoadingTextPostsError] = useState(null)\n    const [imagePosts, setImagePosts] = useState(null)\n    const [loadingImagePosts, setLoadingImagePosts] = useState(false)\n    const [loadingImagePostsError, setLoadingImagePostsError] = useState(null)\n\n    const loadPosts = {\n        textPosts: () => {\n            if (loadingTextPosts === false) {\n                setLoadingTextPosts(true)\n                setLoadingTextPostsError(null)\n\n                axios.get(`http://localhost:8080/user/textPostsByUserName/?username=${name}&skip=${Array.isArray(textPosts) ? textPosts.length : 0}`)\n                .then(response => response.data.data)\n                .then(result => {\n                    console.log(result)\n                    setTextPosts(posts => {\n                        if (Array.isArray(result) && result.length > 0) {\n                            const newTextPosts = Array.isArray(posts) ? _.cloneDeep(posts) : []\n                            newTextPosts.push(...result)\n                            return newTextPosts\n                        } else return textPosts\n                    })\n                    setLoadingTextPosts(false)\n                    setLoadingTextPostsError(null)\n                })\n                .catch(error => {\n                    setLoadingTextPosts(false)\n                    setLoadingTextPostsError(error?.response?.data?.error || String(error))\n                    console.error(error)\n                })\n            }\n        },\n        imagePosts: () => {\n            console.log('loading image posts')\n        }\n    }\n\n    useEffect(() => {\n        loadPosts.textPosts()\n    }, [])\n\n    const handleViewChange = (event, nextView) => {\n        if (nextView !== view && nextView !== null) {\n            setView(nextView)\n            if (nextView === 'textPosts' && textPosts === null) loadPosts.textPosts()\n            if (nextView === 'imagePosts' && imagePosts === null) loadPosts.imagePosts()\n        }\n        if (nextView === null) {\n            loadPosts[view]()\n            console.log(view)\n        }\n    }\n\n    const DisplayTextPosts = useMemo(() => {\n        return Array.isArray(textPosts) ? textPosts.map((post, index) => (\n            <Fragment key={index.toString()}>\n                <TextPost {...post}/>\n            </Fragment>\n        )) : null\n    }, [textPosts])\n    return (\n        <>\n            <FlexRowSpaceAroundDiv>\n                <h1>{name}</h1>\n                <FlexColumnCentreDiv>\n                    <H3NoMargin>{followers.length}</H3NoMargin>\n                    <H3NoMargin>Followers</H3NoMargin>\n                </FlexColumnCentreDiv>\n                <FlexColumnCentreDiv>\n                    <H3NoMargin>{following.length}</H3NoMargin>\n                    <H3NoMargin>Following</H3NoMargin>\n                </FlexColumnCentreDiv>\n            </FlexRowSpaceAroundDiv>\n            <ToggleButtonGroup\n                color=\"primary\"\n                value={view}\n                exclusive\n                onChange={handleViewChange}\n                fullWidth\n            >\n                <ToggleButton value=\"textPosts\">Text Posts</ToggleButton>\n                <ToggleButton value=\"imagePosts\">Image Posts</ToggleButton>\n            </ToggleButtonGroup>\n            {view === 'textPosts' ?\n                <>\n                    {\n                        loadingTextPostsError ?\n                            <h1 style={{color: 'red', textAlign: 'center'}}>{loadingTextPostsError}</h1>\n                        : loadingTextPosts ?\n                            <Box sx={{display: 'flex', justifyContent: 'center', mt: 3}}>\n                                <CircularProgress/>\n                            </Box>\n                        : Array.isArray(textPosts) && textPosts.length === 0 ?\n                            <h1 style={{textAlign: 'center'}}>{name} has no text posts.</h1>\n                        :\n                            <Grid container spacing={2}>\n                                {DisplayTextPosts}\n                            </Grid>\n                    }\n                </>\n            : view === 'imagePosts' ?\n                <>\n                \n                </>\n            : <h1>Pretty big error occured</h1>}\n        </>\n    )\n}\n\nexport default Profile;","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/PageNotFound.js",[],[],"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Settings.js",["159"],[],"import React, {useContext} from \"react\";\nimport { CredentialsContext } from \"../context/CredentialsContext\";\n\nconst SettingsButton = ({text, onClick}) => (\n    <button onClick={onClick} style={{width: '50vw', height: '10vh', marginTop: '2vh', border: '1px solid black', borderRadius: 10, fontSize: '5vh', cursor: 'pointer'}}>{text}</button>\n)\n\nconst Settings = () => {\n    const {storedCredentials, setStoredCredentials} = useContext(CredentialsContext)\n\n    const Logout = () => {\n        localStorage.removeItem('SebMediaCredentials')\n        setStoredCredentials(null)\n    }\n\n    return (\n        <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\n            <SettingsButton text=\"Logout\" onClick={Logout}/>\n        </div>\n    )\n}\n\nexport default Settings;","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/CreateTextPost.js",["160"],[],"import React, {useContext, useState} from 'react';\nimport { CredentialsContext } from '../context/CredentialsContext';\nimport useInput from '../hooks/useInput';\nimport { Box, CircularProgress } from '@mui/material';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'\n\nconst CreateTextPost = () => {\n    const {storedCredentials, setStoredCredentials} = useContext(CredentialsContext);\n    const {_id} = storedCredentials;\n    const [title, bindTitle] = useInput('', 'title')\n    const [body, bindBody] = useInput('', 'body')\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(null)\n    const navigate = useNavigate();\n\n    const uploadTextPost = (e) => {\n        e.preventDefault();\n        setLoading(true)\n        setError(null)\n\n        const toSend = {\n            title,\n            body,\n            userId: _id\n        }\n\n        axios.post('http://localhost:8080/user/textPost', toSend).then(response => response.data)\n        .then(result => {\n            setLoading(false)\n            setError(null)\n            navigate('/home')\n        }).catch(error => {\n            setLoading(false)\n            setError(error?.response?.data?.error)\n        })\n    }\n\n    return (\n        <>\n            <h1>Create Text Post</h1>\n            {loading ?\n                <Box sx={{display: 'flex', justifyContent: 'center', mt: 3}}>\n                    <CircularProgress/>\n                </Box>\n            :\n                <form onSubmit={uploadTextPost} style={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\n                    <input {...bindTitle}/>\n                    <input {...bindBody}/>\n                    <input type=\"submit\" value='Submit'/>\n                    {error && <p style={{color: 'red'}}>{error}</p>}\n                </form>\n            }\n        </>\n    )\n}\n\nexport default CreateTextPost;","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/hooks/useInput.js",[],[],"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/hooks/useComponent.js",["161"],[],"import { useContext } from \"react\";\nimport { DarkModeContext } from \"../context/DarkModeContext\";\n\nconst useComponent = () => {\n    const {darkMode, setDarkMode} = useContext(DarkModeContext);\n\n    const FlexRowCentreDiv = (props) => {\n        return <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'row', backgroundColor: darkMode ? 'black' : 'white', color: darkMode ? 'white' : 'black', ...props.style}}>{props.children}</div>\n    }\n\n    const FlexColumnCentreDiv = (props) => {\n        return <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', backgroundColor: darkMode ? 'black' : 'white', color: darkMode ? 'white' : 'black', ...props.style}}>{props.children}</div>\n    }\n\n    const FlexRowSpaceAroundDiv = (props) => {\n        return <div style={{display: 'flex', justifyContent: 'space-around', alignItems: 'center', flexDirection: 'row', backgroundColor: darkMode ? 'black' : 'white', color: darkMode ? 'white' : 'black', ...props.style}}>{props.children}</div>\n    }\n\n    const H3NoMargin = (props) => <h3 style={{margin: 0, color: darkMode ? 'white' : 'black', ...props.style}}>{props.children}</h3>\n\n    const Div = (props) => <div style={{backgroundColor: darkMode ? 'black' : 'white', color: darkMode ? 'white' : 'black', ...props.style}}>{props.children}</div>\n\n    return {\n        FlexRowCentreDiv,\n        FlexColumnCentreDiv,\n        FlexRowSpaceAroundDiv,\n        H3NoMargin,\n        Div\n    }\n}\n\nexport default useComponent;","/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/context/DarkModeContext.js",[],[],"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/components/TextPost.js",[],[],"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/CreateImagePost.js",["162","163"],[],{"ruleId":"164","severity":1,"message":"165","line":4,"column":40,"nodeType":"166","messageId":"167","endLine":4,"endColumn":52},{"ruleId":"164","severity":1,"message":"168","line":9,"column":29,"nodeType":"166","messageId":"167","endLine":9,"endColumn":49},{"ruleId":"164","severity":1,"message":"169","line":5,"column":12,"nodeType":"166","messageId":"167","endLine":5,"endColumn":29},{"ruleId":"164","severity":1,"message":"168","line":5,"column":31,"nodeType":"166","messageId":"167","endLine":5,"endColumn":51},{"ruleId":"164","severity":1,"message":"170","line":1,"column":16,"nodeType":"166","messageId":"167","endLine":1,"endColumn":26},{"ruleId":"164","severity":1,"message":"171","line":4,"column":48,"nodeType":"166","messageId":"167","endLine":4,"endColumn":54},{"ruleId":"164","severity":1,"message":"172","line":4,"column":56,"nodeType":"166","messageId":"167","endLine":4,"endColumn":61},{"ruleId":"164","severity":1,"message":"168","line":11,"column":29,"nodeType":"166","messageId":"167","endLine":11,"endColumn":49},{"ruleId":"164","severity":1,"message":"173","line":12,"column":20,"nodeType":"166","messageId":"167","endLine":12,"endColumn":31},{"ruleId":"164","severity":1,"message":"174","line":19,"column":9,"nodeType":"166","messageId":"167","endLine":19,"endColumn":31},{"ruleId":"164","severity":1,"message":"169","line":13,"column":12,"nodeType":"166","messageId":"167","endLine":13,"endColumn":29},{"ruleId":"164","severity":1,"message":"168","line":5,"column":31,"nodeType":"166","messageId":"167","endLine":5,"endColumn":51},{"ruleId":"164","severity":1,"message":"169","line":15,"column":12,"nodeType":"166","messageId":"167","endLine":15,"endColumn":29},{"ruleId":"164","severity":1,"message":"168","line":15,"column":31,"nodeType":"166","messageId":"167","endLine":15,"endColumn":51},{"ruleId":"164","severity":1,"message":"175","line":16,"column":13,"nodeType":"166","messageId":"167","endLine":16,"endColumn":29},{"ruleId":"164","severity":1,"message":"176","line":22,"column":24,"nodeType":"166","messageId":"167","endLine":22,"endColumn":37},{"ruleId":"164","severity":1,"message":"177","line":23,"column":12,"nodeType":"166","messageId":"167","endLine":23,"endColumn":29},{"ruleId":"164","severity":1,"message":"178","line":23,"column":31,"nodeType":"166","messageId":"167","endLine":23,"endColumn":51},{"ruleId":"164","severity":1,"message":"179","line":24,"column":12,"nodeType":"166","messageId":"167","endLine":24,"endColumn":34},{"ruleId":"164","severity":1,"message":"180","line":24,"column":36,"nodeType":"166","messageId":"167","endLine":24,"endColumn":61},{"ruleId":"181","severity":1,"message":"182","line":60,"column":8,"nodeType":"183","endLine":60,"endColumn":10,"suggestions":"184"},{"ruleId":"164","severity":1,"message":"169","line":9,"column":12,"nodeType":"166","messageId":"167","endLine":9,"endColumn":29},{"ruleId":"164","severity":1,"message":"168","line":9,"column":31,"nodeType":"166","messageId":"167","endLine":9,"endColumn":51},{"ruleId":"164","severity":1,"message":"173","line":5,"column":22,"nodeType":"166","messageId":"167","endLine":5,"endColumn":33},{"ruleId":"164","severity":1,"message":"168","line":10,"column":31,"nodeType":"166","messageId":"167","endLine":10,"endColumn":51},{"ruleId":"185","severity":1,"message":"186","line":69,"column":38,"nodeType":"187","endLine":69,"endColumn":109},"no-unused-vars","'faCirclePlus' is defined but never used.","Identifier","unusedVar","'setStoredCredentials' is assigned a value but never used.","'storedCredentials' is assigned a value but never used.","'useContext' is defined but never used.","'faMoon' is defined but never used.","'faSun' is defined but never used.","'setDarkMode' is assigned a value but never used.","'darkLightModeIconStyle' is assigned a value but never used.","'FlexRowCentreDiv' is assigned a value but never used.","'setImagePosts' is assigned a value but never used.","'loadingImagePosts' is assigned a value but never used.","'setLoadingImagePosts' is assigned a value but never used.","'loadingImagePostsError' is assigned a value but never used.","'setLoadingImagePostsError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadPosts'. Either include it or remove the dependency array.","ArrayExpression",["188"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"189","fix":"190"},"Update the dependencies array to be: [loadPosts]",{"range":"191","text":"192"},[2666,2668],"[loadPosts]"]