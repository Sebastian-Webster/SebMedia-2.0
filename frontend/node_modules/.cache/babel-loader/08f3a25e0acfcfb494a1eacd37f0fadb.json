{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/components/TextPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useRef, useEffect } from 'react';\nimport { Grid } from '@mui/material';\nimport { DarkModeContext } from '../context/DarkModeContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart as farHeart } from '@fortawesome/free-regular-svg-icons';\nimport { faHeart as fasHeart } from '@fortawesome/free-solid-svg-icons';\nimport Button from '@mui/material/Button';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TextPost = _ref => {\n  _s();\n\n  let {\n    title,\n    body,\n    datePosted,\n    liked,\n    publicId,\n    postId,\n    dispatch,\n    userId,\n    editingMode\n  } = _ref;\n  const {\n    darkMode,\n    setDarkMode\n  } = useContext(DarkModeContext);\n  const changingLikeStatus = useRef(false);\n  const deleting = useRef(false);\n  const NetworkRequestController = new AbortController();\n\n  const toggleLike = () => {\n    if (liked) {\n      //Unlike the post\n      changingLikeStatus.current = true;\n      axios.post('http://localhost:8080/user/unlikeTextPost', {\n        publicId,\n        postId\n      }, {\n        signal: NetworkRequestController.signal\n      }).then(() => {\n        changingLikeStatus.current = false;\n        dispatch({\n          type: 'unlikePost',\n          postId: postId\n        });\n      }).catch(error => {\n        var _error$response, _error$response$data;\n\n        alert((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || String(error));\n        changingLikeStatus.current = false;\n      });\n    } else {\n      //Like the post\n      changingLikeStatus.current = true;\n      axios.post('http://localhost:8080/user/likeTextPost', {\n        publicId,\n        postId\n      }, {\n        signal: NetworkRequestController.signal\n      }).then(() => {\n        changingLikeStatus.current = false;\n        dispatch({\n          type: 'likePost',\n          postId: postId\n        });\n      }).catch(error => {\n        var _error$response2, _error$response2$data;\n\n        alert((error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || String(error));\n        changingLikeStatus.current = false;\n      });\n    }\n  };\n\n  const deletePost = () => {\n    //Self-destruct :-)\n    if (deleting.current === false) {\n      deleting.current = true;\n      axios.delete('http://localhost:8080/user/textPost', {\n        data: {\n          userId,\n          postId\n        },\n        signal: NetworkRequestController.signal\n      }).then(() => {\n        deleting.current = false;\n        dispatch({\n          type: 'deletePost',\n          postId\n        });\n      }).catch(error => {\n        var _error$response3, _error$response3$data;\n\n        alert((error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || String(error));\n        deleting.current = false;\n      });\n    }\n  };\n\n  const editPost = () => {\n    dispatch({\n      type: 'turnOnEditMode'\n    });\n  };\n\n  const revertEdits = () => {\n    dispatch({\n      type: 'turnOffEditMode'\n    });\n  };\n\n  const saveEdits = () => {\n    alert('Coming soon');\n  };\n\n  useEffect(() => {\n    return () => {\n      //When the component gets unloaded, abort any network requests that haven't completed yet\n      NetworkRequestController.abort();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    lg: 3,\n    xl: 2,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: `1px solid ${darkMode ? 'white' : 'black'}`,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), editingMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"error\",\n          variant: \"outlined\",\n          sx: {\n            mt: 1,\n            mr: 1\n          },\n          onClick: revertEdits,\n          children: \"Revert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"success\",\n          variant: \"outlined\",\n          sx: {\n            mt: 1\n          },\n          onClick: saveEdits,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: liked ? fasHeart : farHeart,\n          style: {\n            color: liked ? 'red' : darkMode ? 'white' : 'black',\n            cursor: 'pointer',\n            fontSize: 30\n          },\n          onClick: () => {\n            if (changingLikeStatus.current === false) toggleLike();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          variant: \"contained\",\n          sx: {\n            mt: 1,\n            mr: 1\n          },\n          onClick: deletePost,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          variant: \"contained\",\n          sx: {\n            mt: 1\n          },\n          onClick: editPost,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TextPost, \"NNol+6Q2tGzs06PAA1Ys8AatYVg=\");\n\n_c = TextPost;\nexport default TextPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextPost\");","map":{"version":3,"names":["React","useContext","useRef","useEffect","Grid","DarkModeContext","FontAwesomeIcon","faHeart","farHeart","fasHeart","Button","axios","TextPost","title","body","datePosted","liked","publicId","postId","dispatch","userId","editingMode","darkMode","setDarkMode","changingLikeStatus","deleting","NetworkRequestController","AbortController","toggleLike","current","post","signal","then","type","catch","error","alert","response","data","String","deletePost","delete","editPost","revertEdits","saveEdits","abort","border","padding","mt","mr","color","cursor","fontSize"],"sources":["/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/components/TextPost.js"],"sourcesContent":["import React, {useContext, useRef, useEffect} from 'react';\nimport { Grid } from '@mui/material';\nimport { DarkModeContext } from '../context/DarkModeContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart as farHeart } from '@fortawesome/free-regular-svg-icons';\nimport { faHeart as fasHeart } from '@fortawesome/free-solid-svg-icons';\nimport Button from '@mui/material/Button'\nimport axios from 'axios';\n\nconst TextPost = ({title, body, datePosted, liked, publicId, postId, dispatch, userId, editingMode}) => {\n    const {darkMode, setDarkMode} = useContext(DarkModeContext);\n    const changingLikeStatus = useRef(false)\n    const deleting = useRef(false)\n    const NetworkRequestController = new AbortController();\n\n    const toggleLike = () => {\n        if (liked) {\n            //Unlike the post\n            changingLikeStatus.current = true\n            axios.post('http://localhost:8080/user/unlikeTextPost', {publicId, postId}, {signal: NetworkRequestController.signal}).then(() => {\n                changingLikeStatus.current = false\n                dispatch({type: 'unlikePost', postId: postId})\n            }).catch(error => {\n                alert(error?.response?.data?.error || String(error))\n                changingLikeStatus.current = false\n            })\n        } else {\n            //Like the post\n            changingLikeStatus.current = true\n            axios.post('http://localhost:8080/user/likeTextPost', {publicId, postId}, {signal: NetworkRequestController.signal}).then(() => {\n                changingLikeStatus.current = false\n                dispatch({type: 'likePost', postId: postId})\n            }).catch(error => {\n                alert(error?.response?.data?.error || String(error))\n                changingLikeStatus.current = false\n            })\n        }\n    }\n\n    const deletePost = () => { //Self-destruct :-)\n        if (deleting.current === false) {\n            deleting.current = true;\n            axios.delete('http://localhost:8080/user/textPost', {data: {userId, postId}, signal: NetworkRequestController.signal}).then(() => {\n                deleting.current = false;\n                dispatch({type: 'deletePost', postId})\n            }).catch(error => {\n                alert(error?.response?.data?.error || String(error))\n                deleting.current = false\n            })\n        }\n    }\n\n    const editPost = () => {\n        dispatch({type: 'turnOnEditMode'})\n    }\n\n    const revertEdits = () => {\n        dispatch({type: 'turnOffEditMode'})\n    }\n\n    const saveEdits = () => {\n        alert('Coming soon')\n    }\n\n    useEffect(() => {\n        return () => {\n            //When the component gets unloaded, abort any network requests that haven't completed yet\n            NetworkRequestController.abort();\n        }\n    }, [])\n\n    return (\n        <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\n            <div style={{border: `1px solid ${darkMode ? 'white' : 'black'}`, padding: 10}}>\n                <h1>{title}</h1>\n                <p>{body}</p>\n                {editingMode ?\n                    <>\n                        <Button color=\"error\" variant=\"outlined\" sx={{mt: 1, mr: 1}} onClick={revertEdits}>Revert</Button>\n                        <Button color=\"success\" variant=\"outlined\" sx={{mt: 1}} onClick={saveEdits}>Save</Button>\n                    </>\n                :\n                    <>\n                        <FontAwesomeIcon \n                            icon={liked ? fasHeart : farHeart}\n                            style={{color: liked ? 'red' : darkMode ? 'white' : 'black', cursor: 'pointer', fontSize: 30}}\n                            onClick={() => {\n                                if (changingLikeStatus.current === false) toggleLike()\n                            }}\n                        />\n                        <br/>\n                        <Button color=\"secondary\" variant=\"contained\" sx={{mt: 1, mr: 1}} onClick={deletePost}>Delete</Button>\n                        <Button color=\"secondary\" variant=\"contained\" sx={{mt: 1}} onClick={editPost}>Edit</Button>\n                    </>\n                }\n            </div>\n        </Grid>\n    )\n}\n\nexport default TextPost;"],"mappings":"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"},"metadata":{},"sourceType":"module"}