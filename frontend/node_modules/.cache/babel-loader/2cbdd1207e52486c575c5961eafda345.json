{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect, useMemo, Fragment, useReducer } from 'react';\nimport { CredentialsContext } from '../context/CredentialsContext';\nimport useComponent from '../hooks/useComponent';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport axios from 'axios';\nimport TextPost from '../components/TextPost';\nimport Grid from '@mui/material/Grid';\nimport ImagePost from '../components/ImagePost';\nimport { defaultPfp } from '../constants';\nimport { useFilePicker } from 'use-file-picker';\nimport { DarkModeContext } from '../context/DarkModeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _ = require('lodash');\n\nconst Profile = () => {\n  _s();\n\n  const {\n    storedCredentials,\n    setStoredCredentials\n  } = useContext(CredentialsContext);\n  const {\n    FlexRowCentreDiv,\n    FlexColumnCentreDiv,\n    FlexRowSpaceAroundDiv,\n    H3NoMargin\n  } = useComponent();\n  const {\n    name,\n    followers,\n    following,\n    profileImageKey,\n    _id,\n    publicId\n  } = storedCredentials;\n  const [view, setView] = useState('textPosts');\n  const [openProfileImageFileSelector, {\n    plainFiles: profileImageToUpload,\n    loading: profileImageFileLoading\n  }] = useFilePicker({\n    accept: 'image/jpeg',\n    multiple: false\n  });\n  const [profileImageUploading, setProfileImageUploading] = useState(false);\n  const {\n    darkMode,\n    setDarkMode\n  } = useContext(DarkModeContext);\n\n  const textPostReducer = (state, action) => {\n    switch (action.type) {\n      case 'error':\n        console.error(action.error);\n        return { ...state,\n          error: action.error,\n          loading: false\n        };\n\n      case 'nowLoading':\n        return { ...state,\n          loading: true,\n          error: null\n        };\n\n      case 'addPosts':\n        console.log(action.result);\n\n        if (Array.isArray(action.result) && action.result.length > 0) {\n          const newTextPosts = Array.isArray(state.posts) ? _.cloneDeep(state.posts) : [];\n          newTextPosts.push(...action.result);\n          return { ...state,\n            posts: newTextPosts,\n            loading: false,\n            error: null\n          };\n        } else return Array.isArray(state.posts) ? { ...state,\n          posts: [...action.result, ...state.posts],\n          loading: false,\n          error: null\n        } : { ...state,\n          posts: []\n        };\n\n      case 'likePost':\n        const likePostIndex = state.posts.findIndex(item => item.postId === action.postId);\n\n        if (likePostIndex === -1) {\n          alert('Cannot find post to like');\n          return;\n        }\n\n        const newPostsAfterLike = state.posts;\n        newPostsAfterLike[likePostIndex].liked = true;\n        return { ...state,\n          posts: newPostsAfterLike\n        };\n\n      case 'unlikePost':\n        const unlikePostIndex = state.posts.findIndex(item => item.postId === action.postId);\n\n        if (unlikePostIndex === -1) {\n          alert('Cannot find post to like');\n          return;\n        }\n\n        const newPostsAfterUnlike = state.posts;\n        newPostsAfterUnlike[unlikePostIndex].liked = false;\n        return { ...state,\n          posts: newPostsAfterUnlike\n        };\n\n      default:\n        throw new Error(action.type + ' is not a valid action for textPostReducer');\n    }\n  };\n\n  const textPostReducerInitialState = {\n    posts: null,\n    error: null,\n    loading: false\n  };\n\n  const imagePostReducer = (state, action) => {\n    switch (action.type) {\n      case 'error':\n        console.error(action.error);\n        return { ...state,\n          error: action.error,\n          loading: false\n        };\n\n      case 'nowLoading':\n        return { ...state,\n          loading: true,\n          error: null\n        };\n\n      case 'addPosts':\n        console.log(action.result);\n\n        if (Array.isArray(action.result) && action.result.length > 0) {\n          const newTextPosts = Array.isArray(state.posts) ? _.cloneDeep(state.posts) : [];\n          newTextPosts.push(...action.result);\n          return { ...state,\n            posts: newTextPosts,\n            loading: false,\n            error: null\n          };\n        } else return Array.isArray(state.posts) ? { ...state,\n          posts: [...action.result, ...state.posts],\n          loading: false,\n          error: null\n        } : { ...state,\n          posts: []\n        };\n\n      case 'likePost':\n        const likePostIndex = state.posts.findIndex(item => item.postId === action.postId);\n\n        if (likePostIndex === -1) {\n          alert('Cannot find post to like');\n          return;\n        }\n\n        const newPostsAfterLike = state.posts;\n        newPostsAfterLike[likePostIndex].liked = true;\n        return { ...state,\n          posts: newPostsAfterLike\n        };\n\n      case 'unlikePost':\n        const unlikePostIndex = state.posts.findIndex(item => item.postId === action.postId);\n\n        if (unlikePostIndex === -1) {\n          alert('Cannot find post to like');\n          return;\n        }\n\n        const newPostsAfterUnlike = state.posts;\n        newPostsAfterUnlike[unlikePostIndex].liked = false;\n        return { ...state,\n          posts: newPostsAfterUnlike\n        };\n\n      default:\n        throw new Error(action.type + ' is not a valid action for textPostReducer');\n    }\n  };\n\n  const imagePostReducerInitialState = {\n    posts: null,\n    error: null,\n    loading: false\n  };\n  const [textPostState, dispatchTextPostUpdate] = useReducer(textPostReducer, textPostReducerInitialState);\n  const [imagePostState, dispatchImagePostUpdate] = useReducer(imagePostReducer, imagePostReducerInitialState);\n  const loadPosts = {\n    textPosts: () => {\n      if (textPostState.loading === false) {\n        dispatchTextPostUpdate({\n          type: 'nowLoading'\n        });\n        axios.get(`http://localhost:8080/user/textPostsByUserName/?username=${name}&skip=${Array.isArray(textPostState.posts) ? textPostState.posts.length : 0}&publicId=${publicId}`).then(response => response.data.data).then(result => {\n          dispatchTextPostUpdate({\n            type: 'addPosts',\n            result\n          });\n        }).catch(error => {\n          var _error$response, _error$response$data;\n\n          dispatchTextPostUpdate({\n            type: 'error',\n            error: (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || String(error)\n          });\n        });\n      }\n    },\n    imagePosts: () => {\n      if (imagePostState.loading === false) {\n        dispatchImagePostUpdate({\n          type: 'nowLoading'\n        });\n        axios.get(`http://localhost:8080/user/imagePostsByUserName/?username=${name}&skip=${Array.isArray(imagePostState.posts) ? imagePostState.posts.length : 0}&publicId=${publicId}`).then(response => response.data.data).then(result => {\n          dispatchImagePostUpdate({\n            type: 'addPosts',\n            result\n          });\n        }).catch(error => {\n          var _error$response2, _error$response2$data;\n\n          dispatchImagePostUpdate({\n            type: 'error',\n            error: (error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || String(error)\n          });\n        });\n      }\n    }\n  };\n  useEffect(() => {\n    loadPosts.textPosts();\n  }, []);\n\n  const handleViewChange = (event, nextView) => {\n    if (nextView !== view && nextView !== null) {\n      setView(nextView);\n      if (nextView === 'textPosts' && textPostState.posts === null) loadPosts.textPosts();\n      if (nextView === 'imagePosts' && imagePostState.posts === null) loadPosts.imagePosts();\n    }\n\n    if (nextView === null) {\n      loadPosts[view]();\n    }\n  };\n\n  const DisplayTextPosts = useMemo(() => {\n    return Array.isArray(textPostState.posts) ? textPostState.posts.map((post, index) => /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(TextPost, { ...post,\n        publicId: publicId,\n        dispatch: dispatchTextPostUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this)\n    }, index.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this)) : null;\n  }, [textPostState.posts]);\n  const DisplayImagePosts = useMemo(() => {\n    return Array.isArray(imagePostState.posts) ? imagePostState.posts.map((post, index) => /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ImagePost, { ...post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this)\n    }, index.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this)) : null;\n  }, [imagePostState.posts]);\n  useEffect(() => {\n    console.log(profileImageToUpload[0]);\n\n    if (profileImageToUpload[0]) {\n      setProfileImageUploading(true);\n      const toSend = new FormData();\n      toSend.append('image', profileImageToUpload[0]);\n      toSend.append('_id', _id);\n      axios.post('http://localhost:8080/user/updateProfileImage', toSend, {\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(response => response.data.data).then(result => {\n        const newStoredCredentials = _.cloneDeep(storedCredentials);\n\n        newStoredCredentials.profileImageKey = result;\n\n        if (localStorage.getItem('SebMediaCredentials')) {\n          localStorage.setItem('SebMediaCredentials', JSON.stringify(newStoredCredentials));\n        }\n\n        setStoredCredentials(newStoredCredentials);\n        setProfileImageUploading(false);\n      }).catch(error => {\n        var _error$response3, _error$response3$data;\n\n        alert('Error uploading profile image: ' + ((error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || String(error)));\n        console.error(error);\n        setProfileImageUploading(false);\n      });\n    }\n  }, [profileImageToUpload]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FlexRowSpaceAroundDiv, {\n      children: [/*#__PURE__*/_jsxDEV(FlexRowCentreDiv, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this), profileImageUploading || profileImageFileLoading ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            width: 40,\n            height: 40,\n            marginLeft: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => openProfileImageFileSelector(),\n          src: profileImageKey ? `http://localhost:8080/image/${profileImageKey}` : defaultPfp,\n          style: {\n            width: 50,\n            height: 50,\n            borderRadius: '100%',\n            marginLeft: 10,\n            cursor: 'pointer'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FlexColumnCentreDiv, {\n        children: [/*#__PURE__*/_jsxDEV(H3NoMargin, {\n          children: followers.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(H3NoMargin, {\n          children: \"Followers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FlexColumnCentreDiv, {\n        children: [/*#__PURE__*/_jsxDEV(H3NoMargin, {\n          children: following.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(H3NoMargin, {\n          children: \"Following\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n      color: \"primary\",\n      value: view,\n      exclusive: true,\n      onChange: handleViewChange,\n      fullWidth: true,\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: \"textPosts\",\n        sx: {\n          color: darkMode ? 'white' : 'black',\n          borderColor: darkMode ? 'white' : 'black'\n        },\n        children: \"Text Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: \"imagePosts\",\n        sx: {\n          color: darkMode ? 'white' : 'black',\n          borderColor: darkMode ? 'white' : 'black'\n        },\n        children: \"Image Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this), view === 'textPosts' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: textPostState.error ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: 'red',\n          textAlign: 'center'\n        },\n        children: textPostState.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 29\n      }, this) : textPostState.loading ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          mt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 29\n      }, this) : Array.isArray(textPostState.posts) && textPostState.posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [name, \" has no text posts.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: DisplayTextPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 29\n      }, this)\n    }, void 0, false) : view === 'imagePosts' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: imagePostState.error ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: 'red',\n          textAlign: 'center'\n        },\n        children: imagePostState.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 29\n      }, this) : imagePostState.loading ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          mt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 29\n      }, this) : Array.isArray(imagePostState.posts) && imagePostState.posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [name, \" has no image posts.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: DisplayImagePosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 29\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pretty big error occured\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Profile, \"+mT8e7oxm6ZMJCipFb594+HOxYc=\", false, function () {\n  return [useComponent, useFilePicker];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useContext","useState","useEffect","useMemo","Fragment","useReducer","CredentialsContext","useComponent","ToggleButton","ToggleButtonGroup","Box","CircularProgress","axios","TextPost","Grid","ImagePost","defaultPfp","useFilePicker","DarkModeContext","_","require","Profile","storedCredentials","setStoredCredentials","FlexRowCentreDiv","FlexColumnCentreDiv","FlexRowSpaceAroundDiv","H3NoMargin","name","followers","following","profileImageKey","_id","publicId","view","setView","openProfileImageFileSelector","plainFiles","profileImageToUpload","loading","profileImageFileLoading","accept","multiple","profileImageUploading","setProfileImageUploading","darkMode","setDarkMode","textPostReducer","state","action","type","console","error","log","result","Array","isArray","length","newTextPosts","posts","cloneDeep","push","likePostIndex","findIndex","item","postId","alert","newPostsAfterLike","liked","unlikePostIndex","newPostsAfterUnlike","Error","textPostReducerInitialState","imagePostReducer","imagePostReducerInitialState","textPostState","dispatchTextPostUpdate","imagePostState","dispatchImagePostUpdate","loadPosts","textPosts","get","then","response","data","catch","String","imagePosts","handleViewChange","event","nextView","DisplayTextPosts","map","post","index","toString","DisplayImagePosts","toSend","FormData","append","headers","Accept","newStoredCredentials","localStorage","getItem","setItem","JSON","stringify","display","justifyContent","width","height","marginLeft","borderRadius","cursor","mb","color","borderColor","textAlign","mt"],"sources":["/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/Profile.js"],"sourcesContent":["import React, {useContext, useState, useEffect, useMemo, Fragment, useReducer} from 'react';\nimport { CredentialsContext } from '../context/CredentialsContext';\nimport useComponent from '../hooks/useComponent';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport axios from 'axios';\nimport TextPost from '../components/TextPost';\nimport Grid from '@mui/material/Grid'\nimport ImagePost from '../components/ImagePost';\nimport { defaultPfp } from '../constants';\nimport { useFilePicker } from 'use-file-picker';\nimport { DarkModeContext } from '../context/DarkModeContext';\n\nvar _ = require('lodash')\n\nconst Profile = () => {\n    const {storedCredentials, setStoredCredentials} = useContext(CredentialsContext)\n    const { FlexRowCentreDiv, FlexColumnCentreDiv, FlexRowSpaceAroundDiv, H3NoMargin } = useComponent()\n    const {name, followers, following, profileImageKey, _id, publicId} = storedCredentials;\n    const [view, setView] = useState('textPosts')\n    const [openProfileImageFileSelector, { plainFiles: profileImageToUpload, loading: profileImageFileLoading}] = useFilePicker({accept: 'image/jpeg', multiple: false})\n    const [profileImageUploading, setProfileImageUploading] = useState(false);\n    const {darkMode, setDarkMode} = useContext(DarkModeContext);\n\n    const textPostReducer = (state, action) => {\n        switch(action.type) {\n            case 'error':\n                console.error(action.error)\n                return {...state, error: action.error, loading: false}\n            case 'nowLoading':\n                return {...state, loading: true, error: null}\n            case 'addPosts':\n                console.log(action.result)\n                if (Array.isArray(action.result) && action.result.length > 0) {\n                    const newTextPosts = Array.isArray(state.posts) ? _.cloneDeep(state.posts) : []\n                    newTextPosts.push(...action.result)\n                    return {...state, posts: newTextPosts, loading: false, error: null}\n                } else return Array.isArray(state.posts) ? {...state, posts: [...action.result, ...state.posts], loading: false, error: null} : {...state, posts: []}\n            case 'likePost':\n                const likePostIndex = state.posts.findIndex(item => item.postId === action.postId)\n                if (likePostIndex === -1) {\n                    alert('Cannot find post to like')\n                    return\n                }\n\n                const newPostsAfterLike = state.posts;\n                newPostsAfterLike[likePostIndex].liked = true;\n                \n                return {...state, posts: newPostsAfterLike}\n            case 'unlikePost':\n                const unlikePostIndex = state.posts.findIndex(item => item.postId === action.postId)\n                if (unlikePostIndex === -1) {\n                    alert('Cannot find post to like')\n                    return\n                }\n                \n                const newPostsAfterUnlike = state.posts;\n                newPostsAfterUnlike[unlikePostIndex].liked = false;\n                \n                return {...state, posts: newPostsAfterUnlike}\n            default:\n                throw new Error((action.type + ' is not a valid action for textPostReducer'))\n        }\n    }\n    \n    const textPostReducerInitialState = {\n        posts: null,\n        error: null,\n        loading: false\n    }\n    \n    const imagePostReducer = (state, action) => {\n        switch(action.type) {\n            case 'error':\n                console.error(action.error)\n                return {...state, error: action.error, loading: false}\n            case 'nowLoading':\n                return {...state, loading: true, error: null}\n            case 'addPosts':\n                console.log(action.result)\n                if (Array.isArray(action.result) && action.result.length > 0) {\n                    const newTextPosts = Array.isArray(state.posts) ? _.cloneDeep(state.posts) : []\n                    newTextPosts.push(...action.result)\n                    return {...state, posts: newTextPosts, loading: false, error: null}\n                } else return Array.isArray(state.posts) ? {...state, posts: [...action.result, ...state.posts], loading: false, error: null} : {...state, posts: []}\n            case 'likePost':\n                const likePostIndex = state.posts.findIndex(item => item.postId === action.postId)\n                if (likePostIndex === -1) {\n                    alert('Cannot find post to like')\n                    return\n                }\n\n                const newPostsAfterLike = state.posts;\n                newPostsAfterLike[likePostIndex].liked = true;\n                \n                return {...state, posts: newPostsAfterLike}\n            case 'unlikePost':\n                const unlikePostIndex = state.posts.findIndex(item => item.postId === action.postId)\n                if (unlikePostIndex === -1) {\n                    alert('Cannot find post to like')\n                    return\n                }\n                \n                const newPostsAfterUnlike = state.posts;\n                newPostsAfterUnlike[unlikePostIndex].liked = false;\n                \n                return {...state, posts: newPostsAfterUnlike}\n            default:\n                throw new Error((action.type + ' is not a valid action for textPostReducer'))\n        }\n    }\n    \n    const imagePostReducerInitialState = {\n        posts: null,\n        error: null,\n        loading: false\n    }\n\n    const [textPostState, dispatchTextPostUpdate] = useReducer(textPostReducer, textPostReducerInitialState)\n    const [imagePostState, dispatchImagePostUpdate] = useReducer(imagePostReducer, imagePostReducerInitialState)\n\n    const loadPosts = {\n        textPosts: () => {\n            if (textPostState.loading === false) {\n                dispatchTextPostUpdate({type: 'nowLoading'})\n\n                axios.get(`http://localhost:8080/user/textPostsByUserName/?username=${name}&skip=${Array.isArray(textPostState.posts) ? textPostState.posts.length : 0}&publicId=${publicId}`)\n                .then(response => response.data.data)\n                .then(result => {\n                    dispatchTextPostUpdate({\n                        type: 'addPosts',\n                        result\n                    })\n                })\n                .catch(error => {\n                    dispatchTextPostUpdate({\n                        type: 'error',\n                        error: error?.response?.data?.error || String(error)\n                    })\n                })\n            }\n        },\n        imagePosts: () => {\n            if (imagePostState.loading === false) {\n                dispatchImagePostUpdate({type: 'nowLoading'})\n\n                axios.get(`http://localhost:8080/user/imagePostsByUserName/?username=${name}&skip=${Array.isArray(imagePostState.posts) ? imagePostState.posts.length : 0}&publicId=${publicId}`)\n                .then(response => response.data.data)\n                .then(result => {\n                    dispatchImagePostUpdate({\n                        type: 'addPosts',\n                        result\n                    })\n                }).catch(error => {\n                    dispatchImagePostUpdate({\n                        type: 'error',\n                        error: error?.response?.data?.error || String(error)\n                    })\n                })\n            }\n        }\n    }\n\n    useEffect(() => {\n        loadPosts.textPosts()\n    }, [])\n\n    const handleViewChange = (event, nextView) => {\n        if (nextView !== view && nextView !== null) {\n            setView(nextView)\n            if (nextView === 'textPosts' && textPostState.posts === null) loadPosts.textPosts()\n            if (nextView === 'imagePosts' && imagePostState.posts === null) loadPosts.imagePosts()\n        }\n        if (nextView === null) {\n            loadPosts[view]();\n        }\n    }\n\n    const DisplayTextPosts = useMemo(() => {\n        return Array.isArray(textPostState.posts) ? textPostState.posts.map((post, index) => (\n            <Fragment key={index.toString()}>\n                <TextPost {...post} publicId={publicId} dispatch={dispatchTextPostUpdate}/>\n            </Fragment>\n        )) : null\n    }, [textPostState.posts])\n\n    const DisplayImagePosts = useMemo(() => {\n        return Array.isArray(imagePostState.posts) ? imagePostState.posts.map((post, index) => (\n            <Fragment key={index.toString()}>\n                <ImagePost {...post}/>\n            </Fragment>\n        )) : null\n    }, [imagePostState.posts])\n\n    useEffect(() => {\n        console.log(profileImageToUpload[0])\n        if (profileImageToUpload[0]) {\n            setProfileImageUploading(true)\n            const toSend = new FormData();\n\n            toSend.append('image', profileImageToUpload[0])\n            toSend.append('_id', _id)\n\n            axios.post('http://localhost:8080/user/updateProfileImage', toSend, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'multipart/form-data'\n                }\n            }).then(response => response.data.data)\n            .then(result => {\n                const newStoredCredentials = _.cloneDeep(storedCredentials)\n                newStoredCredentials.profileImageKey = result\n                if (localStorage.getItem('SebMediaCredentials')) {\n                    localStorage.setItem('SebMediaCredentials', JSON.stringify(newStoredCredentials))\n                }\n                setStoredCredentials(newStoredCredentials)\n                setProfileImageUploading(false)\n            })\n            .catch(error => {\n                alert('Error uploading profile image: ' + (error?.response?.data?.error || String(error)))\n                console.error(error)\n                setProfileImageUploading(false)\n            })\n        }\n    }, [profileImageToUpload])\n\n    return (\n        <>\n            <FlexRowSpaceAroundDiv>\n                <FlexRowCentreDiv>\n                    <h1>{name}</h1>\n                    {profileImageUploading || profileImageFileLoading ?\n                        <Box sx={{display: 'flex', justifyContent: 'center', width: 40, height: 40, marginLeft: 1}}>\n                            <CircularProgress/>\n                        </Box>\n                    :\n                        <img onClick={() => openProfileImageFileSelector()} src={profileImageKey ? `http://localhost:8080/image/${profileImageKey}` : defaultPfp} style={{width: 50, height: 50, borderRadius: '100%', marginLeft: 10, cursor: 'pointer'}}/>\n                    }\n                </FlexRowCentreDiv>\n                <FlexColumnCentreDiv>\n                    <H3NoMargin>{followers.length}</H3NoMargin>\n                    <H3NoMargin>Followers</H3NoMargin>\n                </FlexColumnCentreDiv>\n                <FlexColumnCentreDiv>\n                    <H3NoMargin>{following.length}</H3NoMargin>\n                    <H3NoMargin>Following</H3NoMargin>\n                </FlexColumnCentreDiv>\n            </FlexRowSpaceAroundDiv>\n            <ToggleButtonGroup\n                color=\"primary\"\n                value={view}\n                exclusive\n                onChange={handleViewChange}\n                fullWidth\n                sx={{mb: 3}}\n            >\n                <ToggleButton value=\"textPosts\" sx={{color: darkMode ? 'white' : 'black', borderColor: darkMode ? 'white' : 'black'}}>Text Posts</ToggleButton>\n                <ToggleButton value=\"imagePosts\" sx={{color: darkMode ? 'white' : 'black', borderColor: darkMode ? 'white' : 'black'}}>Image Posts</ToggleButton>\n            </ToggleButtonGroup>\n            {view === 'textPosts' ?\n                <>\n                    {\n                        textPostState.error ?\n                            <h1 style={{color: 'red', textAlign: 'center'}}>{textPostState.error}</h1>\n                        : textPostState.loading ?\n                            <Box sx={{display: 'flex', justifyContent: 'center', mt: 3}}>\n                                <CircularProgress/>\n                            </Box>\n                        : Array.isArray(textPostState.posts) && textPostState.posts.length === 0 ?\n                            <h1 style={{textAlign: 'center'}}>{name} has no text posts.</h1>\n                        :\n                            <Grid container spacing={2}>\n                                {DisplayTextPosts}\n                            </Grid>\n                    }\n                </>\n            : view === 'imagePosts' ?\n                <>\n                    {\n                        imagePostState.error ?\n                            <h1 style={{color: 'red', textAlign: 'center'}}>{imagePostState.error}</h1>\n                        : imagePostState.loading ? \n                            <Box sx={{display: 'flex', justifyContent: 'center', mt: 3}}>\n                                <CircularProgress/>\n                            </Box>\n                        : Array.isArray(imagePostState.posts) && imagePostState.posts.length === 0 ?\n                            <h1 style={{textAlign: 'center'}}>{name} has no image posts.</h1>\n                        :\n                            <Grid container spacing={2}>\n                                {DisplayImagePosts}\n                            </Grid>\n                    }\n                </>\n            : <h1>Pretty big error occured</h1>}\n        </>\n    )\n}\n\nexport default Profile;"],"mappings":"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"},"metadata":{},"sourceType":"module"}