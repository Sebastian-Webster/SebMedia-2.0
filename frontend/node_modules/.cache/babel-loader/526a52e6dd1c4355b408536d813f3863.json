{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/components/TextPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useRef, useEffect } from 'react';\nimport { Grid } from '@mui/material';\nimport { DarkModeContext } from '../context/DarkModeContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart as farHeart } from '@fortawesome/free-regular-svg-icons';\nimport { faHeart as fasHeart } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TextPost = _ref => {\n  _s();\n\n  let {\n    title,\n    body,\n    datePosted,\n    liked,\n    publicId,\n    postId\n  } = _ref;\n  const {\n    darkMode,\n    setDarkMode\n  } = useContext(DarkModeContext);\n  const changingLikeStatus = useRef(false);\n  const NetworkRequestController = new AbortController();\n\n  const toggleLike = () => {\n    if (liked) {\n      //Unlike the post\n      axios.post('http://localhost:8080/user/likeTextPost', {});\n    } else {//Like the post\n    }\n  };\n\n  useEffect(() => {\n    return () => {\n      //When the component gets unloaded, abort any network requests that haven't completed yet\n      NetworkRequestController.abort();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    lg: 3,\n    xl: 2,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: `1px solid ${darkMode ? 'white' : 'black'}`,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: liked ? fasHeart : farHeart,\n        style: {\n          backgroundColor: liked ? 'red' : 'transparent',\n          cursor: 'pointer',\n          fontSize: 30\n        },\n        onClick: () => {\n          changingLikeStatus.current === false ? toggleLike() : null;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TextPost, \"Fb1OdTWCjs3rH+bd/GVTGJADdUY=\");\n\n_c = TextPost;\nexport default TextPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextPost\");","map":{"version":3,"names":["React","useContext","useRef","useEffect","Grid","DarkModeContext","FontAwesomeIcon","faHeart","farHeart","fasHeart","axios","TextPost","title","body","datePosted","liked","publicId","postId","darkMode","setDarkMode","changingLikeStatus","NetworkRequestController","AbortController","toggleLike","post","abort","border","padding","backgroundColor","cursor","fontSize","current"],"sources":["/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/components/TextPost.js"],"sourcesContent":["import React, {useContext, useRef, useEffect} from 'react';\nimport { Grid } from '@mui/material';\nimport { DarkModeContext } from '../context/DarkModeContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart as farHeart } from '@fortawesome/free-regular-svg-icons';\nimport { faHeart as fasHeart } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\n\nconst TextPost = ({title, body, datePosted, liked, publicId, postId}) => {\n    const {darkMode, setDarkMode} = useContext(DarkModeContext);\n    const changingLikeStatus = useRef(false)\n    const NetworkRequestController = new AbortController();\n\n    const toggleLike = () => {\n        if (liked) {\n            //Unlike the post\n            axios.post('http://localhost:8080/user/likeTextPost', {})\n\n        } else {\n            //Like the post\n        }\n    }\n\n    useEffect(() => {\n        return () => {\n            //When the component gets unloaded, abort any network requests that haven't completed yet\n            NetworkRequestController.abort();\n        }\n    }, [])\n\n    return (\n        <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\n            <div style={{border: `1px solid ${darkMode ? 'white' : 'black'}`, padding: 10}}>\n                <h1>{title}</h1>\n                <p>{body}</p>\n                <FontAwesomeIcon icon={liked ? fasHeart : farHeart} style={{backgroundColor: liked ? 'red' : 'transparent', cursor: 'pointer', fontSize: 30}} onClick={() => {changingLikeStatus.current === false ? toggleLike() : null}}/>\n            </div>\n        </Grid>\n    )\n}\n\nexport default TextPost;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,MAA3B,EAAmCC,SAAnC,QAAmD,OAAnD;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAO,IAAIC,QAApB,QAAoC,qCAApC;AACA,SAASD,OAAO,IAAIE,QAApB,QAAoC,mCAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAQ,GAAG,QAAwD;EAAA;;EAAA,IAAvD;IAACC,KAAD;IAAQC,IAAR;IAAcC,UAAd;IAA0BC,KAA1B;IAAiCC,QAAjC;IAA2CC;EAA3C,CAAuD;EACrE,MAAM;IAACC,QAAD;IAAWC;EAAX,IAA0BlB,UAAU,CAACI,eAAD,CAA1C;EACA,MAAMe,kBAAkB,GAAGlB,MAAM,CAAC,KAAD,CAAjC;EACA,MAAMmB,wBAAwB,GAAG,IAAIC,eAAJ,EAAjC;;EAEA,MAAMC,UAAU,GAAG,MAAM;IACrB,IAAIR,KAAJ,EAAW;MACP;MACAL,KAAK,CAACc,IAAN,CAAW,yCAAX,EAAsD,EAAtD;IAEH,CAJD,MAIO,CACH;IACH;EACJ,CARD;;EAUArB,SAAS,CAAC,MAAM;IACZ,OAAO,MAAM;MACT;MACAkB,wBAAwB,CAACI,KAAzB;IACH,CAHD;EAIH,CALQ,EAKN,EALM,CAAT;EAOA,oBACI,QAAC,IAAD;IAAM,IAAI,MAAV;IAAW,EAAE,EAAE,EAAf;IAAmB,EAAE,EAAE,CAAvB;IAA0B,EAAE,EAAE,CAA9B;IAAiC,EAAE,EAAE,CAArC;IAAwC,EAAE,EAAE,CAA5C;IAAA,uBACI;MAAK,KAAK,EAAE;QAACC,MAAM,EAAG,aAAYR,QAAQ,GAAG,OAAH,GAAa,OAAQ,EAAnD;QAAsDS,OAAO,EAAE;MAA/D,CAAZ;MAAA,wBACI;QAAA,UAAKf;MAAL;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,UAAIC;MAAJ;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI,QAAC,eAAD;QAAiB,IAAI,EAAEE,KAAK,GAAGN,QAAH,GAAcD,QAA1C;QAAoD,KAAK,EAAE;UAACoB,eAAe,EAAEb,KAAK,GAAG,KAAH,GAAW,aAAlC;UAAiDc,MAAM,EAAE,SAAzD;UAAoEC,QAAQ,EAAE;QAA9E,CAA3D;QAA8I,OAAO,EAAE,MAAM;UAACV,kBAAkB,CAACW,OAAnB,KAA+B,KAA/B,GAAuCR,UAAU,EAAjD,GAAsD,IAAtD;QAA2D;MAAzN;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AASH,CA/BD;;GAAMZ,Q;;KAAAA,Q;AAiCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}