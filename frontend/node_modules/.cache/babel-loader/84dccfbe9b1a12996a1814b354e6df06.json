{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/CreateImagePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useContext } from 'react';\nimport { CredentialsContext } from '../context/CredentialsContext';\nimport useInput from '../hooks/useInput';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, CircularProgress, TextField } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateImagePost = () => {\n  _s();\n\n  const {\n    storedCredentials,\n    setStoredCredentials\n  } = useContext(CredentialsContext);\n  const {\n    _id\n  } = storedCredentials;\n  const [imagePreview, setImagePreview] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [title, bindTitle] = useInput('', 'title');\n  const [body, bindBody] = useInput('', 'body');\n  const imageRef = useRef(null);\n  const navigate = useNavigate();\n\n  const uploadImagePost = e => {\n    e.preventDefault();\n    setLoading(true);\n    const toSend = new FormData();\n    toSend.append('image', imageRef.current.files[0]);\n    toSend.append('title', title);\n    toSend.append('body', body);\n    toSend.append('userId', _id);\n    axios.post('http://localhost:8080/user/imagePost', toSend, {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(result => {\n      navigate('/home');\n    }).catch(error => {\n      var _error$response, _error$response$data;\n\n      console.error(error);\n      setError((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || String(error));\n      setLoading(false);\n    });\n  };\n\n  const updateImagePreview = () => {\n    var file = imageRef.current.files[0];\n    var reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onloadend = e => {\n      setImagePreview(reader.result);\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Image Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: uploadImagePost,\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, { ...bindTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, { ...bindBody,\n        multiline: true,\n        style: {\n          marginBottom: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), imagePreview && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagePreview,\n        style: {\n          maxWidth: '30vh',\n          maxHeight: '30vh'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"image\",\n        name: \"image\",\n        accept: \"image/jpeg\",\n        onChange: updateImagePreview,\n        ref: imageRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreateImagePost, \"qqEVl+DbAPcTOF7RFGxrCwj6PDU=\", false, function () {\n  return [useInput, useInput, useNavigate];\n});\n\n_c = CreateImagePost;\nexport default CreateImagePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateImagePost\");","map":{"version":3,"names":["React","useRef","useState","useContext","CredentialsContext","useInput","axios","useNavigate","Box","CircularProgress","TextField","CreateImagePost","storedCredentials","setStoredCredentials","_id","imagePreview","setImagePreview","loading","setLoading","error","setError","title","bindTitle","body","bindBody","imageRef","navigate","uploadImagePost","e","preventDefault","toSend","FormData","append","current","files","post","headers","Accept","then","result","catch","console","response","data","String","updateImagePreview","file","reader","FileReader","readAsDataURL","onloadend","display","justifyContent","alignItems","flexDirection","marginBottom","maxWidth","maxHeight","color"],"sources":["/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/CreateImagePost.js"],"sourcesContent":["import React, {useRef, useState, useContext} from 'react';\nimport { CredentialsContext } from '../context/CredentialsContext';\nimport useInput from '../hooks/useInput';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, CircularProgress, TextField } from '@mui/material';\nconst CreateImagePost = () => {\n    const {storedCredentials, setStoredCredentials} = useContext(CredentialsContext);\n    const {_id} = storedCredentials;\n    const [imagePreview, setImagePreview] = useState(null)\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null)\n    const [title, bindTitle] = useInput('', 'title')\n    const [body, bindBody] = useInput('', 'body')\n    const imageRef = useRef(null)\n    const navigate = useNavigate();\n\n    const uploadImagePost = (e) => {\n        e.preventDefault()\n\n        setLoading(true)\n\n        const toSend = new FormData();\n\n        toSend.append('image', imageRef.current.files[0])\n        toSend.append('title', title)\n        toSend.append('body', body)\n        toSend.append('userId', _id)\n\n        axios.post('http://localhost:8080/user/imagePost', toSend, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'multipart/form-data'\n            }\n        }).then(result => {\n            navigate('/home')\n        }).catch(error => {\n            console.error(error)\n            setError(error?.response?.data?.error || String(error))\n            setLoading(false)\n        })\n    }\n\n    const updateImagePreview = () => {\n        var file = imageRef.current.files[0];\n        var reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = (e) => {\n            setImagePreview(reader.result)\n        }\n    }\n\n    return (\n        <>\n            <h1>Create Image Post</h1>\n            {loading ? \n                <Box sx={{display: 'flex', justifyContent: 'center'}}>\n                    <CircularProgress/>\n                </Box>\n            :\n                <form onSubmit={uploadImagePost} style={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\n                    <TextField {...bindTitle}/>\n                    <TextField {...bindBody} multiline style={{marginBottom: 10}}/>\n                    {imagePreview && <img src={imagePreview} style={{maxWidth: '30vh', maxHeight: '30vh'}}/>}\n                    <input type=\"file\" id=\"image\" name=\"image\" accept=\"image/jpeg\" onChange={updateImagePreview} ref={imageRef}/>\n                    <input type=\"submit\" value='Submit'/>\n                    {error && <p style={{color: 'red'}}>{error}</p>}\n                </form>\n            }\n        </>\n    )\n}\n\nexport default CreateImagePost;"],"mappings":"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"},"metadata":{},"sourceType":"module"}