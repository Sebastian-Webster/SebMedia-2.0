{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/CreateImagePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useContext } from 'react';\nimport { CredentialsContext } from '../context/CredentialsContext';\nimport useInput from '../hooks/useInput';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar {\n  v4: uuidv4\n} = require('uuid');\n\nconst CreateImagePost = () => {\n  _s();\n\n  const {\n    storedCredentials,\n    setStoredCredentials\n  } = useContext(CredentialsContext);\n  const {\n    _id\n  } = storedCredentials;\n  const [imagePreview, setImagePreview] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [title, bindTitle] = useInput('', 'title');\n  const [body, bindBody] = useInput('', 'body');\n  const imageRef = useRef(null);\n  const navigate = useNavigate();\n\n  const uploadImagePost = e => {\n    e.preventDefault();\n    setLoading(true);\n    const toSend = new FormData();\n    toSend.append('image', {\n      name: uuidv4(),\n      uri: imagePreview,\n      type: 'image/jpg'\n    });\n    toSend.append('title', title);\n    toSend.append('body', body);\n    toSend.append('userId', _id);\n    axios.post('http://localhost:8080/user/createImagePost', toSend, {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(result => {\n      navigate('/home');\n    }).catch(error => {\n      var _error$response, _error$response$data;\n\n      console.error(error);\n      setError((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || String(error));\n      setLoading(false);\n    });\n  };\n\n  const updateImagePreview = () => {\n    var file = imageRef.current.files[0];\n    var reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onloadend = e => {\n      setImagePreview(reader.result);\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: uploadImagePost,\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...bindTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...bindBody\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), imagePreview && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imagePreview,\n      style: {\n        maxWidth: '30vh',\n        maxHeight: '30vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"image\",\n      name: \"image\",\n      accept: \"image/jpeg\",\n      onChange: updateImagePreview,\n      ref: imageRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateImagePost, \"qqEVl+DbAPcTOF7RFGxrCwj6PDU=\", false, function () {\n  return [useInput, useInput, useNavigate];\n});\n\n_c = CreateImagePost;\nexport default CreateImagePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateImagePost\");","map":{"version":3,"names":["React","useRef","useState","useContext","CredentialsContext","useInput","axios","useNavigate","v4","uuidv4","require","CreateImagePost","storedCredentials","setStoredCredentials","_id","imagePreview","setImagePreview","loading","setLoading","error","setError","title","bindTitle","body","bindBody","imageRef","navigate","uploadImagePost","e","preventDefault","toSend","FormData","append","name","uri","type","post","headers","Accept","then","result","catch","console","response","data","String","updateImagePreview","file","current","files","reader","FileReader","readAsDataURL","onloadend","display","justifyContent","alignItems","flexDirection","maxWidth","maxHeight","color"],"sources":["/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/routes/CreateImagePost.js"],"sourcesContent":["import React, {useRef, useState, useContext} from 'react';\nimport { CredentialsContext } from '../context/CredentialsContext';\nimport useInput from '../hooks/useInput';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nvar {v4: uuidv4} = require('uuid')\n\nconst CreateImagePost = () => {\n    const {storedCredentials, setStoredCredentials} = useContext(CredentialsContext);\n    const {_id} = storedCredentials;\n    const [imagePreview, setImagePreview] = useState(null)\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null)\n    const [title, bindTitle] = useInput('', 'title')\n    const [body, bindBody] = useInput('', 'body')\n    const imageRef = useRef(null)\n    const navigate = useNavigate();\n\n    const uploadImagePost = (e) => {\n        e.preventDefault()\n\n        setLoading(true)\n\n        const toSend = new FormData();\n\n        toSend.append('image', {\n            name: uuidv4(),\n            uri: imagePreview,\n            type: 'image/jpg'\n        })\n        toSend.append('title', title)\n        toSend.append('body', body)\n        toSend.append('userId', _id)\n\n        axios.post('http://localhost:8080/user/createImagePost', toSend, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'multipart/form-data'\n            }\n        }).then(result => {\n            navigate('/home')\n        }).catch(error => {\n            console.error(error)\n            setError(error?.response?.data?.error || String(error))\n            setLoading(false)\n        })\n    }\n\n    const updateImagePreview = () => {\n        var file = imageRef.current.files[0];\n        var reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = (e) => {\n            setImagePreview(reader.result)\n        }\n    }\n\n    return (\n        <form onSubmit={uploadImagePost} style={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\n            <input {...bindTitle}/>\n            <input {...bindBody}/>\n            {imagePreview && <img src={imagePreview} style={{maxWidth: '30vh', maxHeight: '30vh'}}/>}\n            <input type=\"file\" id=\"image\" name=\"image\" accept=\"image/jpeg\" onChange={updateImagePreview} ref={imageRef}/>\n            <input type=\"submit\" value='Submit'/>\n            {error && <p style={{color: 'red'}}>{error}</p>}\n        </form>\n    )\n}\n\nexport default CreateImagePost;"],"mappings":"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"},"metadata":{},"sourceType":"module"}