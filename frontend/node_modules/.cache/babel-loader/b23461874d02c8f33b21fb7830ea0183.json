{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/components/TextPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useRef, useEffect } from 'react';\nimport { Grid } from '@mui/material';\nimport { DarkModeContext } from '../context/DarkModeContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart as farHeart } from '@fortawesome/free-regular-svg-icons';\nimport { faHeart as fasHeart } from '@fortawesome/free-solid-svg-icons';\nimport Button from '@mui/material/Button';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TextPost = _ref => {\n  _s();\n\n  let {\n    title,\n    body,\n    datePosted,\n    liked,\n    publicId,\n    postId,\n    dispatch,\n    userId\n  } = _ref;\n  const {\n    darkMode,\n    setDarkMode\n  } = useContext(DarkModeContext);\n  const changingLikeStatus = useRef(false);\n  const deleting = useRef(false);\n  const NetworkRequestController = new AbortController();\n\n  const toggleLike = () => {\n    if (changingLikeStatus.current === false) {\n      if (liked) {\n        //Unlike the post\n        changingLikeStatus.current = true;\n        axios.post('http://localhost:8080/user/unlikeTextPost', {\n          publicId,\n          postId\n        }, {\n          signal: NetworkRequestController.signal\n        }).then(() => {\n          changingLikeStatus.current = false;\n          dispatch({\n            type: 'unlikePost',\n            postId: postId\n          });\n        }).catch(error => {\n          var _error$response, _error$response$data;\n\n          alert((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || String(error));\n          changingLikeStatus.current = false;\n        });\n      } else {\n        //Like the post\n        changingLikeStatus.current = true;\n        axios.post('http://localhost:8080/user/likeTextPost', {\n          publicId,\n          postId\n        }, {\n          signal: NetworkRequestController.signal\n        }).then(() => {\n          changingLikeStatus.current = false;\n          dispatch({\n            type: 'likePost',\n            postId: postId\n          });\n        }).catch(error => {\n          var _error$response2, _error$response2$data;\n\n          alert((error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || String(error));\n          changingLikeStatus.current = false;\n        });\n      }\n    }\n  };\n\n  const deletePost = () => {\n    //Self-destruct :-)\n    if (deleting.current === false) {\n      deleting.current = true;\n      axios.delete('http://localhost:8080/user/textPost', {\n        data: {\n          userId,\n          postId\n        },\n        signal: NetworkRequestController.signal\n      }).then(() => {\n        deleting.current = false;\n        dispatch({\n          type: 'deletePost',\n          postId\n        });\n      }).catch(error => {\n        var _error$response3, _error$response3$data;\n\n        alert((error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || String(error));\n        deleting.current = false;\n      });\n    }\n  };\n\n  useEffect(() => {\n    return () => {\n      //When the component gets unloaded, abort any network requests that haven't completed yet\n      NetworkRequestController.abort();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    lg: 3,\n    xl: 2,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: `1px solid ${darkMode ? 'white' : 'black'}`,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: liked ? fasHeart : farHeart,\n        style: {\n          color: liked ? 'red' : darkMode ? 'white' : 'black',\n          cursor: 'pointer',\n          fontSize: 30\n        },\n        onClick: () => {\n          if (changingLikeStatus.current === false) toggleLike();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        variant: \"contained\",\n        sx: {\n          mt: 1\n        },\n        onClick: deletePost,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TextPost, \"NNol+6Q2tGzs06PAA1Ys8AatYVg=\");\n\n_c = TextPost;\nexport default TextPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextPost\");","map":{"version":3,"names":["React","useContext","useRef","useEffect","Grid","DarkModeContext","FontAwesomeIcon","faHeart","farHeart","fasHeart","Button","axios","TextPost","title","body","datePosted","liked","publicId","postId","dispatch","userId","darkMode","setDarkMode","changingLikeStatus","deleting","NetworkRequestController","AbortController","toggleLike","current","post","signal","then","type","catch","error","alert","response","data","String","deletePost","delete","abort","border","padding","color","cursor","fontSize","mt"],"sources":["/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/components/TextPost.js"],"sourcesContent":["import React, {useContext, useRef, useEffect} from 'react';\nimport { Grid } from '@mui/material';\nimport { DarkModeContext } from '../context/DarkModeContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart as farHeart } from '@fortawesome/free-regular-svg-icons';\nimport { faHeart as fasHeart } from '@fortawesome/free-solid-svg-icons';\nimport Button from '@mui/material/Button'\nimport axios from 'axios';\n\nconst TextPost = ({title, body, datePosted, liked, publicId, postId, dispatch, userId}) => {\n    const {darkMode, setDarkMode} = useContext(DarkModeContext);\n    const changingLikeStatus = useRef(false)\n    const deleting = useRef(false)\n    const NetworkRequestController = new AbortController();\n\n    const toggleLike = () => {\n        if (changingLikeStatus.current === false) {\n            if (liked) {\n                //Unlike the post\n                changingLikeStatus.current = true\n                axios.post('http://localhost:8080/user/unlikeTextPost', {publicId, postId}, {signal: NetworkRequestController.signal}).then(() => {\n                    changingLikeStatus.current = false\n                    dispatch({type: 'unlikePost', postId: postId})\n                }).catch(error => {\n                    alert(error?.response?.data?.error || String(error))\n                    changingLikeStatus.current = false\n                })\n            } else {\n                //Like the post\n                changingLikeStatus.current = true\n                axios.post('http://localhost:8080/user/likeTextPost', {publicId, postId}, {signal: NetworkRequestController.signal}).then(() => {\n                    changingLikeStatus.current = false\n                    dispatch({type: 'likePost', postId: postId})\n                }).catch(error => {\n                    alert(error?.response?.data?.error || String(error))\n                    changingLikeStatus.current = false\n                })\n            }\n        }\n    }\n\n    const deletePost = () => { //Self-destruct :-)\n        if (deleting.current === false) {\n            deleting.current = true;\n            axios.delete('http://localhost:8080/user/textPost', {data: {userId, postId}, signal: NetworkRequestController.signal}).then(() => {\n                deleting.current = false;\n                dispatch({type: 'deletePost', postId})\n            }).catch(error => {\n                alert(error?.response?.data?.error || String(error))\n                deleting.current = false\n            })\n        }\n    }\n\n    useEffect(() => {\n        return () => {\n            //When the component gets unloaded, abort any network requests that haven't completed yet\n            NetworkRequestController.abort();\n        }\n    }, [])\n\n    return (\n        <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\n            <div style={{border: `1px solid ${darkMode ? 'white' : 'black'}`, padding: 10}}>\n                <h1>{title}</h1>\n                <p>{body}</p>\n                <FontAwesomeIcon \n                    icon={liked ? fasHeart : farHeart}\n                    style={{color: liked ? 'red' : darkMode ? 'white' : 'black', cursor: 'pointer', fontSize: 30}}\n                    onClick={() => {\n                        if (changingLikeStatus.current === false) toggleLike()\n                    }}\n                />\n                <br/>\n                <Button color=\"secondary\" variant=\"contained\" sx={{mt: 1}} onClick={deletePost}>Delete</Button>\n            </div>\n        </Grid>\n    )\n}\n\nexport default TextPost;"],"mappings":"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"},"metadata":{},"sourceType":"module"}