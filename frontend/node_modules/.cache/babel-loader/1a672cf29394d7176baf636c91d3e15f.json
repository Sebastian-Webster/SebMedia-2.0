{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/components/ImagePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useRef, useEffect } from 'react';\nimport { Grid } from '@mui/material';\nimport { DarkModeContext } from '../context/DarkModeContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart as farHeart } from '@fortawesome/free-regular-svg-icons';\nimport { faHeart as fasHeart } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImagePost = _ref => {\n  _s();\n\n  let {\n    title,\n    body,\n    datePosted,\n    imageKey,\n    previewImage,\n    liked,\n    publicId,\n    postId,\n    dispatch\n  } = _ref;\n  const {\n    darkMode,\n    setDarkMode\n  } = useContext(DarkModeContext);\n  const changingLikeStatus = useRef(false);\n  const NetworkRequestController = new AbortController();\n\n  const toggleLike = () => {\n    if (liked) {\n      //Unlike the post\n      changingLikeStatus.current = true;\n      axios.post('http://localhost:8080/user/unlikeImagePost', {\n        publicId,\n        postId\n      }, {\n        signal: NetworkRequestController.signal\n      }).then(() => {\n        changingLikeStatus.current = false;\n        dispatch({\n          type: 'unlikePost',\n          postId: postId\n        });\n      }).catch(error => {\n        var _error$response, _error$response$data;\n\n        alert((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || String(error));\n        changingLikeStatus.current = false;\n      });\n    } else {\n      //Like the post\n      changingLikeStatus.current = true;\n      axios.post('http://localhost:8080/user/likeImagePost', {\n        publicId,\n        postId\n      }, {\n        signal: NetworkRequestController.signal\n      }).then(() => {\n        changingLikeStatus.current = false;\n        dispatch({\n          type: 'likePost',\n          postId: postId\n        });\n      }).catch(error => {\n        var _error$response2, _error$response2$data;\n\n        alert((error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || String(error));\n        changingLikeStatus.current = false;\n      });\n    }\n  };\n\n  useEffect(() => {\n    return () => {\n      //When the component gets unloaded, abort any network requests that haven't completed yet\n      NetworkRequestController.abort();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    lg: 3,\n    xl: 2,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: `1px solid ${darkMode ? 'white' : 'black'}`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: previewImage ? previewImage : `http://localhost:8080/image/${imageKey}`,\n        style: {\n          maxHeight: '100%',\n          maxWidth: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: liked ? fasHeart : farHeart,\n        style: {\n          color: liked ? 'red' : darkMode ? 'white' : 'black',\n          cursor: 'pointer',\n          fontSize: 30\n        },\n        onClick: () => {\n          if (changingLikeStatus.current === false) toggleLike();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ImagePost, \"Fb1OdTWCjs3rH+bd/GVTGJADdUY=\");\n\n_c = ImagePost;\nexport default ImagePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagePost\");","map":{"version":3,"names":["React","useContext","useRef","useEffect","Grid","DarkModeContext","FontAwesomeIcon","faHeart","farHeart","fasHeart","axios","ImagePost","title","body","datePosted","imageKey","previewImage","liked","publicId","postId","dispatch","darkMode","setDarkMode","changingLikeStatus","NetworkRequestController","AbortController","toggleLike","current","post","signal","then","type","catch","error","alert","response","data","String","abort","border","maxHeight","maxWidth","color","cursor","fontSize"],"sources":["/Users/sebastianwebster/GitHub/SebMedia-2.0/frontend/src/components/ImagePost.js"],"sourcesContent":["import React, {useContext, useRef, useEffect} from 'react';\nimport { Grid } from '@mui/material';\nimport { DarkModeContext } from '../context/DarkModeContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart as farHeart } from '@fortawesome/free-regular-svg-icons';\nimport { faHeart as fasHeart } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\n\nconst ImagePost = ({title, body, datePosted, imageKey, previewImage, liked, publicId, postId, dispatch}) => {\n    const {darkMode, setDarkMode} = useContext(DarkModeContext)\n    const changingLikeStatus = useRef(false)\n    const NetworkRequestController = new AbortController();\n\n    const toggleLike = () => {\n        if (liked) {\n            //Unlike the post\n            changingLikeStatus.current = true\n            axios.post('http://localhost:8080/user/unlikeImagePost', {publicId, postId}, {signal: NetworkRequestController.signal}).then(() => {\n                changingLikeStatus.current = false\n                dispatch({type: 'unlikePost', postId: postId})\n            }).catch(error => {\n                alert(error?.response?.data?.error || String(error))\n                changingLikeStatus.current = false\n            })\n        } else {\n            //Like the post\n            changingLikeStatus.current = true\n            axios.post('http://localhost:8080/user/likeImagePost', {publicId, postId}, {signal: NetworkRequestController.signal}).then(() => {\n                changingLikeStatus.current = false\n                dispatch({type: 'likePost', postId: postId})\n            }).catch(error => {\n                alert(error?.response?.data?.error || String(error))\n                changingLikeStatus.current = false\n            })\n        }\n    }\n\n    useEffect(() => {\n        return () => {\n            //When the component gets unloaded, abort any network requests that haven't completed yet\n            NetworkRequestController.abort();\n        }\n    }, [])\n\n    return (\n        <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\n            <div style={{border: `1px solid ${darkMode ? 'white' : 'black'}`}}>\n                <h1>{title}</h1>\n                <p>{body}</p>\n                <img src={previewImage ? previewImage : `http://localhost:8080/image/${imageKey}`} style={{maxHeight: '100%', maxWidth: '100%'}}/>\n                <FontAwesomeIcon \n                    icon={liked ? fasHeart : farHeart}\n                    style={{color: liked ? 'red' : darkMode ? 'white' : 'black', cursor: 'pointer', fontSize: 30}}\n                    onClick={() => {\n                        if (changingLikeStatus.current === false) toggleLike()\n                    }}\n                />\n            </div>\n        </Grid>\n    )\n}\n\nexport default ImagePost;"],"mappings":"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"},"metadata":{},"sourceType":"module"}